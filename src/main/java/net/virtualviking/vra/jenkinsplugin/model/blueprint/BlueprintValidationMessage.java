/*
 * VMware Cloud Assembly Blueprint API
 * A multi-cloud Blueprint API for Cloud Automation Services
 *
 * OpenAPI spec version: 2019-09-12
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package net.virtualviking.vra.jenkinsplugin.model.blueprint;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * BlueprintValidationMessage
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-08-31T20:41:57.276-04:00")



public class BlueprintValidationMessage {
  @SerializedName("message")
  private String message = null;

  @SerializedName("metadata")
  private Map<String, String> metadata = null;

  @SerializedName("path")
  private String path = null;

  @SerializedName("resourceName")
  private String resourceName = null;

  /**
   * Message type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    INFO("INFO"),
    
    WARNING("WARNING"),
    
    ERROR("ERROR");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

   /**
   * Validation message
   * @return message
  **/
  @ApiModelProperty(value = "Validation message")
  public String getMessage() {
    return message;
  }

   /**
   * Metadata
   * @return metadata
  **/
  @ApiModelProperty(value = "Metadata")
  public Map<String, String> getMetadata() {
    return metadata;
  }

   /**
   * Validation path
   * @return path
  **/
  @ApiModelProperty(value = "Validation path")
  public String getPath() {
    return path;
  }

   /**
   * Resource name
   * @return resourceName
  **/
  @ApiModelProperty(value = "Resource name")
  public String getResourceName() {
    return resourceName;
  }

   /**
   * Message type
   * @return type
  **/
  @ApiModelProperty(value = "Message type")
  public TypeEnum getType() {
    return type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BlueprintValidationMessage blueprintValidationMessage = (BlueprintValidationMessage) o;
    return Objects.equals(this.message, blueprintValidationMessage.message) &&
        Objects.equals(this.metadata, blueprintValidationMessage.metadata) &&
        Objects.equals(this.path, blueprintValidationMessage.path) &&
        Objects.equals(this.resourceName, blueprintValidationMessage.resourceName) &&
        Objects.equals(this.type, blueprintValidationMessage.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(message, metadata, path, resourceName, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BlueprintValidationMessage {\n");
    
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    resourceName: ").append(toIndentedString(resourceName)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

