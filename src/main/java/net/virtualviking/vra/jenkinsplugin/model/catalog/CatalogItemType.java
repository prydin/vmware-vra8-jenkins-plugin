/*
 * VMware Service Broker API
 * A multi-cloud API for Cloud Automation Services
 *
 * OpenAPI spec version: 2020-08-25
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package net.virtualviking.vra.jenkinsplugin.model.catalog;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.Date;
import java.util.UUID;

/**
 * Represents a type of Catalog Item.
 */
@ApiModel(description = "Represents a type of Catalog Item.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-01T09:23:54.867-04:00")



public class CatalogItemType {
  @SerializedName("baseUri")
  private String baseUri = null;

  @SerializedName("configSchema")
  private Object configSchema = null;

  @SerializedName("createdAt")
  private Date createdAt = null;

  @SerializedName("createdBy")
  private String createdBy = null;

  @SerializedName("iconId")
  private UUID iconId = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("name")
  private String name = null;

  public CatalogItemType baseUri(String baseUri) {
    this.baseUri = baseUri;
    return this;
  }

   /**
   * Base callback URI for import operations
   * @return baseUri
  **/
  @ApiModelProperty(value = "Base callback URI for import operations")
  public String getBaseUri() {
    return baseUri;
  }

  public void setBaseUri(String baseUri) {
    this.baseUri = baseUri;
  }

  public CatalogItemType configSchema(Object configSchema) {
    this.configSchema = configSchema;
    return this;
  }

   /**
   * Configuration schema for this type, requests to create a source of this type should have a compliant &#39;config&#39; field
   * @return configSchema
  **/
  @ApiModelProperty(value = "Configuration schema for this type, requests to create a source of this type should have a compliant 'config' field")
  public Object getConfigSchema() {
    return configSchema;
  }

  public void setConfigSchema(Object configSchema) {
    this.configSchema = configSchema;
  }

  public CatalogItemType createdAt(Date createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Creation time
   * @return createdAt
  **/
  @ApiModelProperty(value = "Creation time")
  public Date getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(Date createdAt) {
    this.createdAt = createdAt;
  }

  public CatalogItemType createdBy(String createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Service that created this type
   * @return createdBy
  **/
  @ApiModelProperty(value = "Service that created this type")
  public String getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
  }

  public CatalogItemType iconId(UUID iconId) {
    this.iconId = iconId;
    return this;
  }

   /**
   * Default Icon Id
   * @return iconId
  **/
  @ApiModelProperty(value = "Default Icon Id")
  public UUID getIconId() {
    return iconId;
  }

  public void setIconId(UUID iconId) {
    this.iconId = iconId;
  }

  public CatalogItemType id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Human-readable unique ID containing only lowercase letters and periods, neither starting nor ending with a period, and never having two consecutive periods
   * @return id
  **/
  @ApiModelProperty(value = "Human-readable unique ID containing only lowercase letters and periods, neither starting nor ending with a period, and never having two consecutive periods")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public CatalogItemType name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Unique Catalog Item Type name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "Unique Catalog Item Type name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CatalogItemType catalogItemType = (CatalogItemType) o;
    return Objects.equals(this.baseUri, catalogItemType.baseUri) &&
        Objects.equals(this.configSchema, catalogItemType.configSchema) &&
        Objects.equals(this.createdAt, catalogItemType.createdAt) &&
        Objects.equals(this.createdBy, catalogItemType.createdBy) &&
        Objects.equals(this.iconId, catalogItemType.iconId) &&
        Objects.equals(this.id, catalogItemType.id) &&
        Objects.equals(this.name, catalogItemType.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(baseUri, configSchema, createdAt, createdBy, iconId, id, name);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CatalogItemType {\n");
    
    sb.append("    baseUri: ").append(toIndentedString(baseUri)).append("\n");
    sb.append("    configSchema: ").append(toIndentedString(configSchema)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    iconId: ").append(toIndentedString(iconId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

