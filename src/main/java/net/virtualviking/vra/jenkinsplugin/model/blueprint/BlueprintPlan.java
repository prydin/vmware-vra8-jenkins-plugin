/*
 * VMware Cloud Assembly Blueprint API
 * A multi-cloud Blueprint API for Cloud Automation Services
 *
 * OpenAPI spec version: 2019-09-12
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package net.virtualviking.vra.jenkinsplugin.model.blueprint;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import net.virtualviking.vra.jenkinsplugin.model.blueprint.BlueprintPlanTask;

/**
 * BlueprintPlan
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-08-31T20:41:57.276-04:00")



public class BlueprintPlan {
  @SerializedName("inputProperties")
  private Object inputProperties = null;

  @SerializedName("outputProperties")
  private Object outputProperties = null;

  @SerializedName("tasks")
  private List<BlueprintPlanTask> tasks = null;

   /**
   * Blueprint plan input properties
   * @return inputProperties
  **/
  @ApiModelProperty(value = "Blueprint plan input properties")
  public Object getInputProperties() {
    return inputProperties;
  }

   /**
   * Blueprint plan output properties
   * @return outputProperties
  **/
  @ApiModelProperty(value = "Blueprint plan output properties")
  public Object getOutputProperties() {
    return outputProperties;
  }

   /**
   * Blueprint plan tasks
   * @return tasks
  **/
  @ApiModelProperty(value = "Blueprint plan tasks")
  public List<BlueprintPlanTask> getTasks() {
    return tasks;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BlueprintPlan blueprintPlan = (BlueprintPlan) o;
    return Objects.equals(this.inputProperties, blueprintPlan.inputProperties) &&
        Objects.equals(this.outputProperties, blueprintPlan.outputProperties) &&
        Objects.equals(this.tasks, blueprintPlan.tasks);
  }

  @Override
  public int hashCode() {
    return Objects.hash(inputProperties, outputProperties, tasks);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BlueprintPlan {\n");
    
    sb.append("    inputProperties: ").append(toIndentedString(inputProperties)).append("\n");
    sb.append("    outputProperties: ").append(toIndentedString(outputProperties)).append("\n");
    sb.append("    tasks: ").append(toIndentedString(tasks)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

