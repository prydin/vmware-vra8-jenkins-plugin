/*
 * VMware Cloud Assembly Blueprint API
 * A multi-cloud Blueprint API for Cloud Automation Services
 *
 * OpenAPI spec version: 2019-09-12
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package net.virtualviking.vra.jenkinsplugin.model.blueprint;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.Date;

/**
 * CommitDetails
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-08-31T20:41:57.276-04:00")



public class CommitDetails {
  @SerializedName("authorName")
  private String authorName = null;

  @SerializedName("comments")
  private String comments = null;

  @SerializedName("commitId")
  private String commitId = null;

  @SerializedName("committedDate")
  private Date committedDate = null;

  @SerializedName("committerEmail")
  private String committerEmail = null;

  @SerializedName("committerName")
  private String committerName = null;

  public CommitDetails authorName(String authorName) {
    this.authorName = authorName;
    return this;
  }

   /**
   * Get authorName
   * @return authorName
  **/
  @ApiModelProperty(value = "")
  public String getAuthorName() {
    return authorName;
  }

  public void setAuthorName(String authorName) {
    this.authorName = authorName;
  }

  public CommitDetails comments(String comments) {
    this.comments = comments;
    return this;
  }

   /**
   * Get comments
   * @return comments
  **/
  @ApiModelProperty(value = "")
  public String getComments() {
    return comments;
  }

  public void setComments(String comments) {
    this.comments = comments;
  }

  public CommitDetails commitId(String commitId) {
    this.commitId = commitId;
    return this;
  }

   /**
   * Get commitId
   * @return commitId
  **/
  @ApiModelProperty(value = "")
  public String getCommitId() {
    return commitId;
  }

  public void setCommitId(String commitId) {
    this.commitId = commitId;
  }

  public CommitDetails committedDate(Date committedDate) {
    this.committedDate = committedDate;
    return this;
  }

   /**
   * Get committedDate
   * @return committedDate
  **/
  @ApiModelProperty(value = "")
  public Date getCommittedDate() {
    return committedDate;
  }

  public void setCommittedDate(Date committedDate) {
    this.committedDate = committedDate;
  }

  public CommitDetails committerEmail(String committerEmail) {
    this.committerEmail = committerEmail;
    return this;
  }

   /**
   * Get committerEmail
   * @return committerEmail
  **/
  @ApiModelProperty(value = "")
  public String getCommitterEmail() {
    return committerEmail;
  }

  public void setCommitterEmail(String committerEmail) {
    this.committerEmail = committerEmail;
  }

  public CommitDetails committerName(String committerName) {
    this.committerName = committerName;
    return this;
  }

   /**
   * Get committerName
   * @return committerName
  **/
  @ApiModelProperty(value = "")
  public String getCommitterName() {
    return committerName;
  }

  public void setCommitterName(String committerName) {
    this.committerName = committerName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommitDetails commitDetails = (CommitDetails) o;
    return Objects.equals(this.authorName, commitDetails.authorName) &&
        Objects.equals(this.comments, commitDetails.comments) &&
        Objects.equals(this.commitId, commitDetails.commitId) &&
        Objects.equals(this.committedDate, commitDetails.committedDate) &&
        Objects.equals(this.committerEmail, commitDetails.committerEmail) &&
        Objects.equals(this.committerName, commitDetails.committerName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authorName, comments, commitId, committedDate, committerEmail, committerName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommitDetails {\n");
    
    sb.append("    authorName: ").append(toIndentedString(authorName)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    commitId: ").append(toIndentedString(commitId)).append("\n");
    sb.append("    committedDate: ").append(toIndentedString(committedDate)).append("\n");
    sb.append("    committerEmail: ").append(toIndentedString(committerEmail)).append("\n");
    sb.append("    committerName: ").append(toIndentedString(committerName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

