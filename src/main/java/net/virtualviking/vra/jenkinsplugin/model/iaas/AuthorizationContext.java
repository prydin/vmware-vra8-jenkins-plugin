/*
 * VMware Cloud Assembly IaaS API
 * A multi-cloud IaaS API for Cloud Automation Services
 *
 * OpenAPI spec version: 2019-01-15
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package net.virtualviking.vra.jenkinsplugin.model.iaas;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;

/** AuthorizationContext */
@javax.annotation.Generated(
    value = "io.swagger.codegen.languages.JavaClientCodegen",
    date = "2020-09-01T10:54:54.585-04:00")
public class AuthorizationContext {
  @SerializedName("commonQueryClauseMap")
  private Map<String, Query> commonQueryClauseMap = null;

  @SerializedName("resourceQueryMap")
  private Map<String, Query> resourceQueryMap = null;

  @SerializedName("delegatingUserSubjectInfo")
  private DelegatingUserSubjectInfo delegatingUserSubjectInfo = null;

  @SerializedName("subject")
  private String subject = null;

  @SerializedName("aclEnabled")
  private Boolean aclEnabled = null;

  @SerializedName("claims")
  private Claims claims = null;

  @SerializedName("systemUser")
  private Boolean systemUser = null;

  @SerializedName("allowedActionsByPath")
  private Map<String, List<String>> allowedActionsByPath = null;

  @SerializedName("resourceQueryFilterMap")
  private Map<String, QueryFilter> resourceQueryFilterMap = null;

  @SerializedName("additionalData")
  private Object additionalData = null;

  @SerializedName("guestUser")
  private Boolean guestUser = null;

  @SerializedName("token")
  private String token = null;

  public AuthorizationContext commonQueryClauseMap(Map<String, Query> commonQueryClauseMap) {
    this.commonQueryClauseMap = commonQueryClauseMap;
    return this;
  }

  public AuthorizationContext putCommonQueryClauseMapItem(
      String key, Query commonQueryClauseMapItem) {
    if (this.commonQueryClauseMap == null) {
      this.commonQueryClauseMap = new HashMap<String, Query>();
    }
    this.commonQueryClauseMap.put(key, commonQueryClauseMapItem);
    return this;
  }

  /**
   * Get commonQueryClauseMap
   *
   * @return commonQueryClauseMap
   */
  @ApiModelProperty(value = "")
  public Map<String, Query> getCommonQueryClauseMap() {
    return commonQueryClauseMap;
  }

  public void setCommonQueryClauseMap(Map<String, Query> commonQueryClauseMap) {
    this.commonQueryClauseMap = commonQueryClauseMap;
  }

  public AuthorizationContext resourceQueryMap(Map<String, Query> resourceQueryMap) {
    this.resourceQueryMap = resourceQueryMap;
    return this;
  }

  public AuthorizationContext putResourceQueryMapItem(String key, Query resourceQueryMapItem) {
    if (this.resourceQueryMap == null) {
      this.resourceQueryMap = new HashMap<String, Query>();
    }
    this.resourceQueryMap.put(key, resourceQueryMapItem);
    return this;
  }

  /**
   * Get resourceQueryMap
   *
   * @return resourceQueryMap
   */
  @ApiModelProperty(value = "")
  public Map<String, Query> getResourceQueryMap() {
    return resourceQueryMap;
  }

  public void setResourceQueryMap(Map<String, Query> resourceQueryMap) {
    this.resourceQueryMap = resourceQueryMap;
  }

  public AuthorizationContext delegatingUserSubjectInfo(
      DelegatingUserSubjectInfo delegatingUserSubjectInfo) {
    this.delegatingUserSubjectInfo = delegatingUserSubjectInfo;
    return this;
  }

  /**
   * Get delegatingUserSubjectInfo
   *
   * @return delegatingUserSubjectInfo
   */
  @ApiModelProperty(value = "")
  public DelegatingUserSubjectInfo getDelegatingUserSubjectInfo() {
    return delegatingUserSubjectInfo;
  }

  public void setDelegatingUserSubjectInfo(DelegatingUserSubjectInfo delegatingUserSubjectInfo) {
    this.delegatingUserSubjectInfo = delegatingUserSubjectInfo;
  }

  public AuthorizationContext subject(String subject) {
    this.subject = subject;
    return this;
  }

  /**
   * Get subject
   *
   * @return subject
   */
  @ApiModelProperty(value = "")
  public String getSubject() {
    return subject;
  }

  public void setSubject(String subject) {
    this.subject = subject;
  }

  public AuthorizationContext aclEnabled(Boolean aclEnabled) {
    this.aclEnabled = aclEnabled;
    return this;
  }

  /**
   * Get aclEnabled
   *
   * @return aclEnabled
   */
  @ApiModelProperty(value = "")
  public Boolean isAclEnabled() {
    return aclEnabled;
  }

  public void setAclEnabled(Boolean aclEnabled) {
    this.aclEnabled = aclEnabled;
  }

  public AuthorizationContext claims(Claims claims) {
    this.claims = claims;
    return this;
  }

  /**
   * Get claims
   *
   * @return claims
   */
  @ApiModelProperty(value = "")
  public Claims getClaims() {
    return claims;
  }

  public void setClaims(Claims claims) {
    this.claims = claims;
  }

  public AuthorizationContext systemUser(Boolean systemUser) {
    this.systemUser = systemUser;
    return this;
  }

  /**
   * Get systemUser
   *
   * @return systemUser
   */
  @ApiModelProperty(value = "")
  public Boolean isSystemUser() {
    return systemUser;
  }

  public void setSystemUser(Boolean systemUser) {
    this.systemUser = systemUser;
  }

  public AuthorizationContext allowedActionsByPath(Map<String, List<String>> allowedActionsByPath) {
    this.allowedActionsByPath = allowedActionsByPath;
    return this;
  }

  /**
   * Get allowedActionsByPath
   *
   * @return allowedActionsByPath
   */
  @ApiModelProperty(value = "")
  public Map<String, List<String>> getAllowedActionsByPath() {
    return allowedActionsByPath;
  }

  public void setAllowedActionsByPath(Map<String, List<String>> allowedActionsByPath) {
    this.allowedActionsByPath = allowedActionsByPath;
  }

  public AuthorizationContext resourceQueryFilterMap(
      Map<String, QueryFilter> resourceQueryFilterMap) {
    this.resourceQueryFilterMap = resourceQueryFilterMap;
    return this;
  }

  public AuthorizationContext putResourceQueryFilterMapItem(
      String key, QueryFilter resourceQueryFilterMapItem) {
    if (this.resourceQueryFilterMap == null) {
      this.resourceQueryFilterMap = new HashMap<String, QueryFilter>();
    }
    this.resourceQueryFilterMap.put(key, resourceQueryFilterMapItem);
    return this;
  }

  /**
   * Get resourceQueryFilterMap
   *
   * @return resourceQueryFilterMap
   */
  @ApiModelProperty(value = "")
  public Map<String, QueryFilter> getResourceQueryFilterMap() {
    return resourceQueryFilterMap;
  }

  public void setResourceQueryFilterMap(Map<String, QueryFilter> resourceQueryFilterMap) {
    this.resourceQueryFilterMap = resourceQueryFilterMap;
  }

  public AuthorizationContext additionalData(Object additionalData) {
    this.additionalData = additionalData;
    return this;
  }

  /**
   * Get additionalData
   *
   * @return additionalData
   */
  @ApiModelProperty(value = "")
  public Object getAdditionalData() {
    return additionalData;
  }

  public void setAdditionalData(Object additionalData) {
    this.additionalData = additionalData;
  }

  public AuthorizationContext guestUser(Boolean guestUser) {
    this.guestUser = guestUser;
    return this;
  }

  /**
   * Get guestUser
   *
   * @return guestUser
   */
  @ApiModelProperty(value = "")
  public Boolean isGuestUser() {
    return guestUser;
  }

  public void setGuestUser(Boolean guestUser) {
    this.guestUser = guestUser;
  }

  public AuthorizationContext token(String token) {
    this.token = token;
    return this;
  }

  /**
   * Get token
   *
   * @return token
   */
  @ApiModelProperty(value = "")
  public String getToken() {
    return token;
  }

  public void setToken(String token) {
    this.token = token;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthorizationContext authorizationContext = (AuthorizationContext) o;
    return Objects.equals(this.commonQueryClauseMap, authorizationContext.commonQueryClauseMap)
        && Objects.equals(this.resourceQueryMap, authorizationContext.resourceQueryMap)
        && Objects.equals(
            this.delegatingUserSubjectInfo, authorizationContext.delegatingUserSubjectInfo)
        && Objects.equals(this.subject, authorizationContext.subject)
        && Objects.equals(this.aclEnabled, authorizationContext.aclEnabled)
        && Objects.equals(this.claims, authorizationContext.claims)
        && Objects.equals(this.systemUser, authorizationContext.systemUser)
        && Objects.equals(this.allowedActionsByPath, authorizationContext.allowedActionsByPath)
        && Objects.equals(this.resourceQueryFilterMap, authorizationContext.resourceQueryFilterMap)
        && Objects.equals(this.additionalData, authorizationContext.additionalData)
        && Objects.equals(this.guestUser, authorizationContext.guestUser)
        && Objects.equals(this.token, authorizationContext.token);
  }

  @Override
  public int hashCode() {
    return Objects.hash(
        commonQueryClauseMap,
        resourceQueryMap,
        delegatingUserSubjectInfo,
        subject,
        aclEnabled,
        claims,
        systemUser,
        allowedActionsByPath,
        resourceQueryFilterMap,
        additionalData,
        guestUser,
        token);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthorizationContext {\n");

    sb.append("    commonQueryClauseMap: ")
        .append(toIndentedString(commonQueryClauseMap))
        .append("\n");
    sb.append("    resourceQueryMap: ").append(toIndentedString(resourceQueryMap)).append("\n");
    sb.append("    delegatingUserSubjectInfo: ")
        .append(toIndentedString(delegatingUserSubjectInfo))
        .append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    aclEnabled: ").append(toIndentedString(aclEnabled)).append("\n");
    sb.append("    claims: ").append(toIndentedString(claims)).append("\n");
    sb.append("    systemUser: ").append(toIndentedString(systemUser)).append("\n");
    sb.append("    allowedActionsByPath: ")
        .append(toIndentedString(allowedActionsByPath))
        .append("\n");
    sb.append("    resourceQueryFilterMap: ")
        .append(toIndentedString(resourceQueryFilterMap))
        .append("\n");
    sb.append("    additionalData: ").append(toIndentedString(additionalData)).append("\n");
    sb.append("    guestUser: ").append(toIndentedString(guestUser)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
