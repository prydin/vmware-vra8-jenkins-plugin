/*
 * VMware Cloud Assembly Blueprint API
 * A multi-cloud Blueprint API for Cloud Automation Services
 *
 * OpenAPI spec version: 2019-09-12
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package net.virtualviking.vra.jenkinsplugin.model.blueprint;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.Date;
import net.virtualviking.vra.jenkinsplugin.model.blueprint.TerraformToBlueprintMapping;

/**
 * TerraformBlueprintConfig
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-08-31T20:41:57.276-04:00")



public class TerraformBlueprintConfig {
  @SerializedName("createdAt")
  private Date createdAt = null;

  @SerializedName("createdBy")
  private String createdBy = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("orgId")
  private String orgId = null;

  @SerializedName("projectId")
  private String projectId = null;

  @SerializedName("projectName")
  private String projectName = null;

  @SerializedName("terraformToBlueprintMapping")
  private TerraformToBlueprintMapping terraformToBlueprintMapping = null;

  @SerializedName("updatedAt")
  private Date updatedAt = null;

  @SerializedName("updatedBy")
  private String updatedBy = null;

  @SerializedName("version")
  private String version = null;

   /**
   * Created time
   * @return createdAt
  **/
  @ApiModelProperty(value = "Created time")
  public Date getCreatedAt() {
    return createdAt;
  }

   /**
   * Created by
   * @return createdBy
  **/
  @ApiModelProperty(value = "Created by")
  public String getCreatedBy() {
    return createdBy;
  }

  public TerraformBlueprintConfig description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Blueprint description.
   * @return description
  **/
  @ApiModelProperty(value = "Blueprint description.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

   /**
   * Object ID
   * @return id
  **/
  @ApiModelProperty(value = "Object ID")
  public String getId() {
    return id;
  }

  public TerraformBlueprintConfig name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Blueprint name.
   * @return name
  **/
  @ApiModelProperty(value = "Blueprint name.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

   /**
   * Org ID
   * @return orgId
  **/
  @ApiModelProperty(value = "Org ID")
  public String getOrgId() {
    return orgId;
  }

  public TerraformBlueprintConfig projectId(String projectId) {
    this.projectId = projectId;
    return this;
  }

   /**
   * Project ID
   * @return projectId
  **/
  @ApiModelProperty(value = "Project ID")
  public String getProjectId() {
    return projectId;
  }

  public void setProjectId(String projectId) {
    this.projectId = projectId;
  }

   /**
   * Project Name
   * @return projectName
  **/
  @ApiModelProperty(value = "Project Name")
  public String getProjectName() {
    return projectName;
  }

  public TerraformBlueprintConfig terraformToBlueprintMapping(TerraformToBlueprintMapping terraformToBlueprintMapping) {
    this.terraformToBlueprintMapping = terraformToBlueprintMapping;
    return this;
  }

   /**
   * Terraform configuration to blueprint mapping.
   * @return terraformToBlueprintMapping
  **/
  @ApiModelProperty(value = "Terraform configuration to blueprint mapping.")
  public TerraformToBlueprintMapping getTerraformToBlueprintMapping() {
    return terraformToBlueprintMapping;
  }

  public void setTerraformToBlueprintMapping(TerraformToBlueprintMapping terraformToBlueprintMapping) {
    this.terraformToBlueprintMapping = terraformToBlueprintMapping;
  }

   /**
   * Updated time
   * @return updatedAt
  **/
  @ApiModelProperty(value = "Updated time")
  public Date getUpdatedAt() {
    return updatedAt;
  }

   /**
   * Updated by
   * @return updatedBy
  **/
  @ApiModelProperty(value = "Updated by")
  public String getUpdatedBy() {
    return updatedBy;
  }

  public TerraformBlueprintConfig version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Terraform runtime version.
   * @return version
  **/
  @ApiModelProperty(value = "Terraform runtime version.")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TerraformBlueprintConfig terraformBlueprintConfig = (TerraformBlueprintConfig) o;
    return Objects.equals(this.createdAt, terraformBlueprintConfig.createdAt) &&
        Objects.equals(this.createdBy, terraformBlueprintConfig.createdBy) &&
        Objects.equals(this.description, terraformBlueprintConfig.description) &&
        Objects.equals(this.id, terraformBlueprintConfig.id) &&
        Objects.equals(this.name, terraformBlueprintConfig.name) &&
        Objects.equals(this.orgId, terraformBlueprintConfig.orgId) &&
        Objects.equals(this.projectId, terraformBlueprintConfig.projectId) &&
        Objects.equals(this.projectName, terraformBlueprintConfig.projectName) &&
        Objects.equals(this.terraformToBlueprintMapping, terraformBlueprintConfig.terraformToBlueprintMapping) &&
        Objects.equals(this.updatedAt, terraformBlueprintConfig.updatedAt) &&
        Objects.equals(this.updatedBy, terraformBlueprintConfig.updatedBy) &&
        Objects.equals(this.version, terraformBlueprintConfig.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, createdBy, description, id, name, orgId, projectId, projectName, terraformToBlueprintMapping, updatedAt, updatedBy, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TerraformBlueprintConfig {\n");
    
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    orgId: ").append(toIndentedString(orgId)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    terraformToBlueprintMapping: ").append(toIndentedString(terraformToBlueprintMapping)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    updatedBy: ").append(toIndentedString(updatedBy)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

