/*
 * VMware Cloud Assembly IaaS API
 * A multi-cloud IaaS API for Cloud Automation Services
 *
 * OpenAPI spec version: 2019-01-15
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package net.virtualviking.vra.jenkinsplugin.model.iaas;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import net.virtualviking.vra.jenkinsplugin.model.iaas.DataSource;
import net.virtualviking.vra.jenkinsplugin.model.iaas.ExecutorService;
import net.virtualviking.vra.jenkinsplugin.model.iaas.PostgresSchemaManager;
import net.virtualviking.vra.jenkinsplugin.model.iaas.ScheduledExecutorService;
import net.virtualviking.vra.jenkinsplugin.model.iaas.ServiceHostState;
import net.virtualviking.vra.jenkinsplugin.model.iaas.SystemHostInfo;
import net.virtualviking.vra.jenkinsplugin.model.iaas.Thread;
import net.virtualviking.vra.jenkinsplugin.model.iaas.Tracer;

/**
 * ServiceHost
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-01T10:54:54.585-04:00")



public class ServiceHost {
  @SerializedName("publicUriAsString")
  private String publicUriAsString = null;

  @SerializedName("serviceStateCaching")
  private Boolean serviceStateCaching = null;

  @SerializedName("maintenanceCheckIntervalMicros")
  private Long maintenanceCheckIntervalMicros = null;

  @SerializedName("documentIndexServiceUri")
  private String documentIndexServiceUri = null;

  @SerializedName("runtimeShutdownHook")
  private Thread runtimeShutdownHook = null;

  @SerializedName("preferredAddress")
  private String preferredAddress = null;

  @SerializedName("postgresSchemaManager")
  private PostgresSchemaManager postgresSchemaManager = null;

  @SerializedName("inactive")
  private Boolean inactive = null;

  @SerializedName("operationTimeoutMicros")
  private Long operationTimeoutMicros = null;

  @SerializedName("executor")
  private ExecutorService executor = null;

  @SerializedName("state")
  private ServiceHostState state = null;

  @SerializedName("autoBackupEnabled")
  private Boolean autoBackupEnabled = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("tracingEnabled")
  private Boolean tracingEnabled = null;

  @SerializedName("authenticationServiceUri")
  private String authenticationServiceUri = null;

  @SerializedName("maintenanceIntervalMicros")
  private Long maintenanceIntervalMicros = null;

  @SerializedName("started")
  private Boolean started = null;

  @SerializedName("scheduledExecutor")
  private ScheduledExecutorService scheduledExecutor = null;

  @SerializedName("tracer")
  private Tracer tracer = null;

  @SerializedName("serviceCacheClearDelayMicros")
  private Long serviceCacheClearDelayMicros = null;

  @SerializedName("uri")
  private String uri = null;

  @SerializedName("systemInfo")
  private SystemHostInfo systemInfo = null;

  @SerializedName("processOwner")
  private Boolean processOwner = null;

  @SerializedName("port")
  private Integer port = null;

  @SerializedName("stopping")
  private Boolean stopping = null;

  @SerializedName("storageSandbox")
  private String storageSandbox = null;

  @SerializedName("authorizationEnabled")
  private Boolean authorizationEnabled = null;

  @SerializedName("location")
  private String location = null;

  @SerializedName("publicUri")
  private String publicUri = null;

  @SerializedName("dataSource")
  private DataSource dataSource = null;

  public ServiceHost publicUriAsString(String publicUriAsString) {
    this.publicUriAsString = publicUriAsString;
    return this;
  }

   /**
   * Get publicUriAsString
   * @return publicUriAsString
  **/
  @ApiModelProperty(value = "")
  public String getPublicUriAsString() {
    return publicUriAsString;
  }

  public void setPublicUriAsString(String publicUriAsString) {
    this.publicUriAsString = publicUriAsString;
  }

  public ServiceHost serviceStateCaching(Boolean serviceStateCaching) {
    this.serviceStateCaching = serviceStateCaching;
    return this;
  }

   /**
   * Get serviceStateCaching
   * @return serviceStateCaching
  **/
  @ApiModelProperty(value = "")
  public Boolean isServiceStateCaching() {
    return serviceStateCaching;
  }

  public void setServiceStateCaching(Boolean serviceStateCaching) {
    this.serviceStateCaching = serviceStateCaching;
  }

  public ServiceHost maintenanceCheckIntervalMicros(Long maintenanceCheckIntervalMicros) {
    this.maintenanceCheckIntervalMicros = maintenanceCheckIntervalMicros;
    return this;
  }

   /**
   * Get maintenanceCheckIntervalMicros
   * @return maintenanceCheckIntervalMicros
  **/
  @ApiModelProperty(value = "")
  public Long getMaintenanceCheckIntervalMicros() {
    return maintenanceCheckIntervalMicros;
  }

  public void setMaintenanceCheckIntervalMicros(Long maintenanceCheckIntervalMicros) {
    this.maintenanceCheckIntervalMicros = maintenanceCheckIntervalMicros;
  }

  public ServiceHost documentIndexServiceUri(String documentIndexServiceUri) {
    this.documentIndexServiceUri = documentIndexServiceUri;
    return this;
  }

   /**
   * Get documentIndexServiceUri
   * @return documentIndexServiceUri
  **/
  @ApiModelProperty(value = "")
  public String getDocumentIndexServiceUri() {
    return documentIndexServiceUri;
  }

  public void setDocumentIndexServiceUri(String documentIndexServiceUri) {
    this.documentIndexServiceUri = documentIndexServiceUri;
  }

  public ServiceHost runtimeShutdownHook(Thread runtimeShutdownHook) {
    this.runtimeShutdownHook = runtimeShutdownHook;
    return this;
  }

   /**
   * Get runtimeShutdownHook
   * @return runtimeShutdownHook
  **/
  @ApiModelProperty(value = "")
  public Thread getRuntimeShutdownHook() {
    return runtimeShutdownHook;
  }

  public void setRuntimeShutdownHook(Thread runtimeShutdownHook) {
    this.runtimeShutdownHook = runtimeShutdownHook;
  }

  public ServiceHost preferredAddress(String preferredAddress) {
    this.preferredAddress = preferredAddress;
    return this;
  }

   /**
   * Get preferredAddress
   * @return preferredAddress
  **/
  @ApiModelProperty(value = "")
  public String getPreferredAddress() {
    return preferredAddress;
  }

  public void setPreferredAddress(String preferredAddress) {
    this.preferredAddress = preferredAddress;
  }

  public ServiceHost postgresSchemaManager(PostgresSchemaManager postgresSchemaManager) {
    this.postgresSchemaManager = postgresSchemaManager;
    return this;
  }

   /**
   * Get postgresSchemaManager
   * @return postgresSchemaManager
  **/
  @ApiModelProperty(value = "")
  public PostgresSchemaManager getPostgresSchemaManager() {
    return postgresSchemaManager;
  }

  public void setPostgresSchemaManager(PostgresSchemaManager postgresSchemaManager) {
    this.postgresSchemaManager = postgresSchemaManager;
  }

  public ServiceHost inactive(Boolean inactive) {
    this.inactive = inactive;
    return this;
  }

   /**
   * Get inactive
   * @return inactive
  **/
  @ApiModelProperty(value = "")
  public Boolean isInactive() {
    return inactive;
  }

  public void setInactive(Boolean inactive) {
    this.inactive = inactive;
  }

  public ServiceHost operationTimeoutMicros(Long operationTimeoutMicros) {
    this.operationTimeoutMicros = operationTimeoutMicros;
    return this;
  }

   /**
   * Get operationTimeoutMicros
   * @return operationTimeoutMicros
  **/
  @ApiModelProperty(value = "")
  public Long getOperationTimeoutMicros() {
    return operationTimeoutMicros;
  }

  public void setOperationTimeoutMicros(Long operationTimeoutMicros) {
    this.operationTimeoutMicros = operationTimeoutMicros;
  }

  public ServiceHost executor(ExecutorService executor) {
    this.executor = executor;
    return this;
  }

   /**
   * Get executor
   * @return executor
  **/
  @ApiModelProperty(value = "")
  public ExecutorService getExecutor() {
    return executor;
  }

  public void setExecutor(ExecutorService executor) {
    this.executor = executor;
  }

  public ServiceHost state(ServiceHostState state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @ApiModelProperty(value = "")
  public ServiceHostState getState() {
    return state;
  }

  public void setState(ServiceHostState state) {
    this.state = state;
  }

  public ServiceHost autoBackupEnabled(Boolean autoBackupEnabled) {
    this.autoBackupEnabled = autoBackupEnabled;
    return this;
  }

   /**
   * Get autoBackupEnabled
   * @return autoBackupEnabled
  **/
  @ApiModelProperty(value = "")
  public Boolean isAutoBackupEnabled() {
    return autoBackupEnabled;
  }

  public void setAutoBackupEnabled(Boolean autoBackupEnabled) {
    this.autoBackupEnabled = autoBackupEnabled;
  }

  public ServiceHost id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ServiceHost tracingEnabled(Boolean tracingEnabled) {
    this.tracingEnabled = tracingEnabled;
    return this;
  }

   /**
   * Get tracingEnabled
   * @return tracingEnabled
  **/
  @ApiModelProperty(value = "")
  public Boolean isTracingEnabled() {
    return tracingEnabled;
  }

  public void setTracingEnabled(Boolean tracingEnabled) {
    this.tracingEnabled = tracingEnabled;
  }

  public ServiceHost authenticationServiceUri(String authenticationServiceUri) {
    this.authenticationServiceUri = authenticationServiceUri;
    return this;
  }

   /**
   * Get authenticationServiceUri
   * @return authenticationServiceUri
  **/
  @ApiModelProperty(value = "")
  public String getAuthenticationServiceUri() {
    return authenticationServiceUri;
  }

  public void setAuthenticationServiceUri(String authenticationServiceUri) {
    this.authenticationServiceUri = authenticationServiceUri;
  }

  public ServiceHost maintenanceIntervalMicros(Long maintenanceIntervalMicros) {
    this.maintenanceIntervalMicros = maintenanceIntervalMicros;
    return this;
  }

   /**
   * Get maintenanceIntervalMicros
   * @return maintenanceIntervalMicros
  **/
  @ApiModelProperty(value = "")
  public Long getMaintenanceIntervalMicros() {
    return maintenanceIntervalMicros;
  }

  public void setMaintenanceIntervalMicros(Long maintenanceIntervalMicros) {
    this.maintenanceIntervalMicros = maintenanceIntervalMicros;
  }

  public ServiceHost started(Boolean started) {
    this.started = started;
    return this;
  }

   /**
   * Get started
   * @return started
  **/
  @ApiModelProperty(value = "")
  public Boolean isStarted() {
    return started;
  }

  public void setStarted(Boolean started) {
    this.started = started;
  }

  public ServiceHost scheduledExecutor(ScheduledExecutorService scheduledExecutor) {
    this.scheduledExecutor = scheduledExecutor;
    return this;
  }

   /**
   * Get scheduledExecutor
   * @return scheduledExecutor
  **/
  @ApiModelProperty(value = "")
  public ScheduledExecutorService getScheduledExecutor() {
    return scheduledExecutor;
  }

  public void setScheduledExecutor(ScheduledExecutorService scheduledExecutor) {
    this.scheduledExecutor = scheduledExecutor;
  }

  public ServiceHost tracer(Tracer tracer) {
    this.tracer = tracer;
    return this;
  }

   /**
   * Get tracer
   * @return tracer
  **/
  @ApiModelProperty(value = "")
  public Tracer getTracer() {
    return tracer;
  }

  public void setTracer(Tracer tracer) {
    this.tracer = tracer;
  }

  public ServiceHost serviceCacheClearDelayMicros(Long serviceCacheClearDelayMicros) {
    this.serviceCacheClearDelayMicros = serviceCacheClearDelayMicros;
    return this;
  }

   /**
   * Get serviceCacheClearDelayMicros
   * @return serviceCacheClearDelayMicros
  **/
  @ApiModelProperty(value = "")
  public Long getServiceCacheClearDelayMicros() {
    return serviceCacheClearDelayMicros;
  }

  public void setServiceCacheClearDelayMicros(Long serviceCacheClearDelayMicros) {
    this.serviceCacheClearDelayMicros = serviceCacheClearDelayMicros;
  }

  public ServiceHost uri(String uri) {
    this.uri = uri;
    return this;
  }

   /**
   * Get uri
   * @return uri
  **/
  @ApiModelProperty(value = "")
  public String getUri() {
    return uri;
  }

  public void setUri(String uri) {
    this.uri = uri;
  }

  public ServiceHost systemInfo(SystemHostInfo systemInfo) {
    this.systemInfo = systemInfo;
    return this;
  }

   /**
   * Get systemInfo
   * @return systemInfo
  **/
  @ApiModelProperty(value = "")
  public SystemHostInfo getSystemInfo() {
    return systemInfo;
  }

  public void setSystemInfo(SystemHostInfo systemInfo) {
    this.systemInfo = systemInfo;
  }

  public ServiceHost processOwner(Boolean processOwner) {
    this.processOwner = processOwner;
    return this;
  }

   /**
   * Get processOwner
   * @return processOwner
  **/
  @ApiModelProperty(value = "")
  public Boolean isProcessOwner() {
    return processOwner;
  }

  public void setProcessOwner(Boolean processOwner) {
    this.processOwner = processOwner;
  }

  public ServiceHost port(Integer port) {
    this.port = port;
    return this;
  }

   /**
   * Get port
   * @return port
  **/
  @ApiModelProperty(value = "")
  public Integer getPort() {
    return port;
  }

  public void setPort(Integer port) {
    this.port = port;
  }

  public ServiceHost stopping(Boolean stopping) {
    this.stopping = stopping;
    return this;
  }

   /**
   * Get stopping
   * @return stopping
  **/
  @ApiModelProperty(value = "")
  public Boolean isStopping() {
    return stopping;
  }

  public void setStopping(Boolean stopping) {
    this.stopping = stopping;
  }

  public ServiceHost storageSandbox(String storageSandbox) {
    this.storageSandbox = storageSandbox;
    return this;
  }

   /**
   * Get storageSandbox
   * @return storageSandbox
  **/
  @ApiModelProperty(value = "")
  public String getStorageSandbox() {
    return storageSandbox;
  }

  public void setStorageSandbox(String storageSandbox) {
    this.storageSandbox = storageSandbox;
  }

  public ServiceHost authorizationEnabled(Boolean authorizationEnabled) {
    this.authorizationEnabled = authorizationEnabled;
    return this;
  }

   /**
   * Get authorizationEnabled
   * @return authorizationEnabled
  **/
  @ApiModelProperty(value = "")
  public Boolean isAuthorizationEnabled() {
    return authorizationEnabled;
  }

  public void setAuthorizationEnabled(Boolean authorizationEnabled) {
    this.authorizationEnabled = authorizationEnabled;
  }

  public ServiceHost location(String location) {
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @ApiModelProperty(value = "")
  public String getLocation() {
    return location;
  }

  public void setLocation(String location) {
    this.location = location;
  }

  public ServiceHost publicUri(String publicUri) {
    this.publicUri = publicUri;
    return this;
  }

   /**
   * Get publicUri
   * @return publicUri
  **/
  @ApiModelProperty(value = "")
  public String getPublicUri() {
    return publicUri;
  }

  public void setPublicUri(String publicUri) {
    this.publicUri = publicUri;
  }

  public ServiceHost dataSource(DataSource dataSource) {
    this.dataSource = dataSource;
    return this;
  }

   /**
   * Get dataSource
   * @return dataSource
  **/
  @ApiModelProperty(value = "")
  public DataSource getDataSource() {
    return dataSource;
  }

  public void setDataSource(DataSource dataSource) {
    this.dataSource = dataSource;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceHost serviceHost = (ServiceHost) o;
    return Objects.equals(this.publicUriAsString, serviceHost.publicUriAsString) &&
        Objects.equals(this.serviceStateCaching, serviceHost.serviceStateCaching) &&
        Objects.equals(this.maintenanceCheckIntervalMicros, serviceHost.maintenanceCheckIntervalMicros) &&
        Objects.equals(this.documentIndexServiceUri, serviceHost.documentIndexServiceUri) &&
        Objects.equals(this.runtimeShutdownHook, serviceHost.runtimeShutdownHook) &&
        Objects.equals(this.preferredAddress, serviceHost.preferredAddress) &&
        Objects.equals(this.postgresSchemaManager, serviceHost.postgresSchemaManager) &&
        Objects.equals(this.inactive, serviceHost.inactive) &&
        Objects.equals(this.operationTimeoutMicros, serviceHost.operationTimeoutMicros) &&
        Objects.equals(this.executor, serviceHost.executor) &&
        Objects.equals(this.state, serviceHost.state) &&
        Objects.equals(this.autoBackupEnabled, serviceHost.autoBackupEnabled) &&
        Objects.equals(this.id, serviceHost.id) &&
        Objects.equals(this.tracingEnabled, serviceHost.tracingEnabled) &&
        Objects.equals(this.authenticationServiceUri, serviceHost.authenticationServiceUri) &&
        Objects.equals(this.maintenanceIntervalMicros, serviceHost.maintenanceIntervalMicros) &&
        Objects.equals(this.started, serviceHost.started) &&
        Objects.equals(this.scheduledExecutor, serviceHost.scheduledExecutor) &&
        Objects.equals(this.tracer, serviceHost.tracer) &&
        Objects.equals(this.serviceCacheClearDelayMicros, serviceHost.serviceCacheClearDelayMicros) &&
        Objects.equals(this.uri, serviceHost.uri) &&
        Objects.equals(this.systemInfo, serviceHost.systemInfo) &&
        Objects.equals(this.processOwner, serviceHost.processOwner) &&
        Objects.equals(this.port, serviceHost.port) &&
        Objects.equals(this.stopping, serviceHost.stopping) &&
        Objects.equals(this.storageSandbox, serviceHost.storageSandbox) &&
        Objects.equals(this.authorizationEnabled, serviceHost.authorizationEnabled) &&
        Objects.equals(this.location, serviceHost.location) &&
        Objects.equals(this.publicUri, serviceHost.publicUri) &&
        Objects.equals(this.dataSource, serviceHost.dataSource);
  }

  @Override
  public int hashCode() {
    return Objects.hash(publicUriAsString, serviceStateCaching, maintenanceCheckIntervalMicros, documentIndexServiceUri, runtimeShutdownHook, preferredAddress, postgresSchemaManager, inactive, operationTimeoutMicros, executor, state, autoBackupEnabled, id, tracingEnabled, authenticationServiceUri, maintenanceIntervalMicros, started, scheduledExecutor, tracer, serviceCacheClearDelayMicros, uri, systemInfo, processOwner, port, stopping, storageSandbox, authorizationEnabled, location, publicUri, dataSource);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceHost {\n");
    
    sb.append("    publicUriAsString: ").append(toIndentedString(publicUriAsString)).append("\n");
    sb.append("    serviceStateCaching: ").append(toIndentedString(serviceStateCaching)).append("\n");
    sb.append("    maintenanceCheckIntervalMicros: ").append(toIndentedString(maintenanceCheckIntervalMicros)).append("\n");
    sb.append("    documentIndexServiceUri: ").append(toIndentedString(documentIndexServiceUri)).append("\n");
    sb.append("    runtimeShutdownHook: ").append(toIndentedString(runtimeShutdownHook)).append("\n");
    sb.append("    preferredAddress: ").append(toIndentedString(preferredAddress)).append("\n");
    sb.append("    postgresSchemaManager: ").append(toIndentedString(postgresSchemaManager)).append("\n");
    sb.append("    inactive: ").append(toIndentedString(inactive)).append("\n");
    sb.append("    operationTimeoutMicros: ").append(toIndentedString(operationTimeoutMicros)).append("\n");
    sb.append("    executor: ").append(toIndentedString(executor)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    autoBackupEnabled: ").append(toIndentedString(autoBackupEnabled)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    tracingEnabled: ").append(toIndentedString(tracingEnabled)).append("\n");
    sb.append("    authenticationServiceUri: ").append(toIndentedString(authenticationServiceUri)).append("\n");
    sb.append("    maintenanceIntervalMicros: ").append(toIndentedString(maintenanceIntervalMicros)).append("\n");
    sb.append("    started: ").append(toIndentedString(started)).append("\n");
    sb.append("    scheduledExecutor: ").append(toIndentedString(scheduledExecutor)).append("\n");
    sb.append("    tracer: ").append(toIndentedString(tracer)).append("\n");
    sb.append("    serviceCacheClearDelayMicros: ").append(toIndentedString(serviceCacheClearDelayMicros)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    systemInfo: ").append(toIndentedString(systemInfo)).append("\n");
    sb.append("    processOwner: ").append(toIndentedString(processOwner)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    stopping: ").append(toIndentedString(stopping)).append("\n");
    sb.append("    storageSandbox: ").append(toIndentedString(storageSandbox)).append("\n");
    sb.append("    authorizationEnabled: ").append(toIndentedString(authorizationEnabled)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    publicUri: ").append(toIndentedString(publicUri)).append("\n");
    sb.append("    dataSource: ").append(toIndentedString(dataSource)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

