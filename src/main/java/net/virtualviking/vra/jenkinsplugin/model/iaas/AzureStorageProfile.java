/*
 * VMware Cloud Assembly IaaS API
 * A multi-cloud IaaS API for Cloud Automation Services
 *
 * OpenAPI spec version: 2019-01-15
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package net.virtualviking.vra.jenkinsplugin.model.iaas;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import net.virtualviking.vra.jenkinsplugin.model.iaas.Href;
import net.virtualviking.vra.jenkinsplugin.model.iaas.Tag;

/**
 * Defines a structure that holds list of storage policies defined for Azure for a specific region.**HATEOAS** links:&lt;br&gt;**storage-account** - FabricAzureStorageAccount - Storage account for the profile.&lt;br&gt;**region** - Region - Region for the profile.&lt;br&gt;**self** - AzureStorageProfile - Self link to this Azure storage profile.
 */
@ApiModel(description = "Defines a structure that holds list of storage policies defined for Azure for a specific region.**HATEOAS** links:<br>**storage-account** - FabricAzureStorageAccount - Storage account for the profile.<br>**region** - Region - Region for the profile.<br>**self** - AzureStorageProfile - Self link to this Azure storage profile.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-01T10:54:54.585-04:00")



public class AzureStorageProfile {
  @SerializedName("owner")
  private String owner = null;

  @SerializedName("_links")
  private Map<String, Href> links = new HashMap<String, Href>();

  @SerializedName("supportsEncryption")
  private Boolean supportsEncryption = null;

  @SerializedName("externalRegionId")
  private String externalRegionId = null;

  @SerializedName("cloudAccountId")
  private String cloudAccountId = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("dataDiskCaching")
  private String dataDiskCaching = null;

  @SerializedName("orgId")
  private String orgId = null;

  @SerializedName("tags")
  private List<Tag> tags = null;

  @SerializedName("organizationId")
  private String organizationId = null;

  @SerializedName("createdAt")
  private String createdAt = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("defaultItem")
  private Boolean defaultItem = null;

  @SerializedName("diskType")
  private String diskType = null;

  @SerializedName("osDiskCaching")
  private String osDiskCaching = null;

  @SerializedName("updatedAt")
  private String updatedAt = null;

  public AzureStorageProfile owner(String owner) {
    this.owner = owner;
    return this;
  }

   /**
   * Email of the user that owns the entity.
   * @return owner
  **/
  @ApiModelProperty(example = "csp@vmware.com", value = "Email of the user that owns the entity.")
  public String getOwner() {
    return owner;
  }

  public void setOwner(String owner) {
    this.owner = owner;
  }

  public AzureStorageProfile links(Map<String, Href> links) {
    this.links = links;
    return this;
  }

  public AzureStorageProfile putLinksItem(String key, Href linksItem) {
    this.links.put(key, linksItem);
    return this;
  }

   /**
   * HATEOAS of the entity
   * @return links
  **/
  @ApiModelProperty(required = true, value = "HATEOAS of the entity")
  public Map<String, Href> getLinks() {
    return links;
  }

  public void setLinks(Map<String, Href> links) {
    this.links = links;
  }

  public AzureStorageProfile supportsEncryption(Boolean supportsEncryption) {
    this.supportsEncryption = supportsEncryption;
    return this;
  }

   /**
   * Indicates whether this storage profile should support encryption or not.
   * @return supportsEncryption
  **/
  @ApiModelProperty(example = "false", value = "Indicates whether this storage profile should support encryption or not.")
  public Boolean isSupportsEncryption() {
    return supportsEncryption;
  }

  public void setSupportsEncryption(Boolean supportsEncryption) {
    this.supportsEncryption = supportsEncryption;
  }

  public AzureStorageProfile externalRegionId(String externalRegionId) {
    this.externalRegionId = externalRegionId;
    return this;
  }

   /**
   * The id of the region for which this profile is defined
   * @return externalRegionId
  **/
  @ApiModelProperty(example = "uswest", value = "The id of the region for which this profile is defined")
  public String getExternalRegionId() {
    return externalRegionId;
  }

  public void setExternalRegionId(String externalRegionId) {
    this.externalRegionId = externalRegionId;
  }

  public AzureStorageProfile cloudAccountId(String cloudAccountId) {
    this.cloudAccountId = cloudAccountId;
    return this;
  }

   /**
   * Id of the cloud account this storage profile belongs to.
   * @return cloudAccountId
  **/
  @ApiModelProperty(example = "[9e49]", value = "Id of the cloud account this storage profile belongs to.")
  public String getCloudAccountId() {
    return cloudAccountId;
  }

  public void setCloudAccountId(String cloudAccountId) {
    this.cloudAccountId = cloudAccountId;
  }

  public AzureStorageProfile description(String description) {
    this.description = description;
    return this;
  }

   /**
   * A human-friendly description.
   * @return description
  **/
  @ApiModelProperty(example = "my-description", value = "A human-friendly description.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public AzureStorageProfile dataDiskCaching(String dataDiskCaching) {
    this.dataDiskCaching = dataDiskCaching;
    return this;
  }

   /**
   * Indicates the caching mechanism for additional disk. 
   * @return dataDiskCaching
  **/
  @ApiModelProperty(example = "None / ReadOnly / ReadWrite", value = "Indicates the caching mechanism for additional disk. ")
  public String getDataDiskCaching() {
    return dataDiskCaching;
  }

  public void setDataDiskCaching(String dataDiskCaching) {
    this.dataDiskCaching = dataDiskCaching;
  }

  public AzureStorageProfile orgId(String orgId) {
    this.orgId = orgId;
    return this;
  }

   /**
   * The id of the organization this entity belongs to.
   * @return orgId
  **/
  @ApiModelProperty(example = "9e49", value = "The id of the organization this entity belongs to.")
  public String getOrgId() {
    return orgId;
  }

  public void setOrgId(String orgId) {
    this.orgId = orgId;
  }

  public AzureStorageProfile tags(List<Tag> tags) {
    this.tags = tags;
    return this;
  }

  public AzureStorageProfile addTagsItem(Tag tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<Tag>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * A list of tags that represent the capabilities of this storage profile
   * @return tags
  **/
  @ApiModelProperty(example = "\"[ { \\\"key\\\" : \\\"tier\\\", \\\"value\\\": \\\"silver\\\" } ]\"", value = "A list of tags that represent the capabilities of this storage profile")
  public List<Tag> getTags() {
    return tags;
  }

  public void setTags(List<Tag> tags) {
    this.tags = tags;
  }

  public AzureStorageProfile organizationId(String organizationId) {
    this.organizationId = organizationId;
    return this;
  }

   /**
   * This field is deprecated. Use orgId instead. The id of the organization this entity belongs to.
   * @return organizationId
  **/
  @ApiModelProperty(example = "deprecated", value = "This field is deprecated. Use orgId instead. The id of the organization this entity belongs to.")
  public String getOrganizationId() {
    return organizationId;
  }

  public void setOrganizationId(String organizationId) {
    this.organizationId = organizationId;
  }

  public AzureStorageProfile createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Date when the entity was created. The date is in ISO 8601 and UTC.
   * @return createdAt
  **/
  @ApiModelProperty(example = "2012-09-27", value = "Date when the entity was created. The date is in ISO 8601 and UTC.")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public AzureStorageProfile name(String name) {
    this.name = name;
    return this;
  }

   /**
   * A human-friendly name used as an identifier in APIs that support this option.
   * @return name
  **/
  @ApiModelProperty(example = "my-name", value = "A human-friendly name used as an identifier in APIs that support this option.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public AzureStorageProfile id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The id of this resource instance
   * @return id
  **/
  @ApiModelProperty(example = "9e49", required = true, value = "The id of this resource instance")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public AzureStorageProfile defaultItem(Boolean defaultItem) {
    this.defaultItem = defaultItem;
    return this;
  }

   /**
   * Indicates if a storage profile contains default storage properties.
   * @return defaultItem
  **/
  @ApiModelProperty(example = "false", required = true, value = "Indicates if a storage profile contains default storage properties.")
  public Boolean isDefaultItem() {
    return defaultItem;
  }

  public void setDefaultItem(Boolean defaultItem) {
    this.defaultItem = defaultItem;
  }

  public AzureStorageProfile diskType(String diskType) {
    this.diskType = diskType;
    return this;
  }

   /**
   * Indicates the performance tier for the storage type. Premium disks are SSD backed and Standard disks are HDD backed.
   * @return diskType
  **/
  @ApiModelProperty(example = "Standard_LRS / Premium_LRS", value = "Indicates the performance tier for the storage type. Premium disks are SSD backed and Standard disks are HDD backed.")
  public String getDiskType() {
    return diskType;
  }

  public void setDiskType(String diskType) {
    this.diskType = diskType;
  }

  public AzureStorageProfile osDiskCaching(String osDiskCaching) {
    this.osDiskCaching = osDiskCaching;
    return this;
  }

   /**
   * Indicates the caching mechanism for OS disk. Default policy for OS disks is Read/Write.
   * @return osDiskCaching
  **/
  @ApiModelProperty(example = "None / ReadOnly / ReadWrite", value = "Indicates the caching mechanism for OS disk. Default policy for OS disks is Read/Write.")
  public String getOsDiskCaching() {
    return osDiskCaching;
  }

  public void setOsDiskCaching(String osDiskCaching) {
    this.osDiskCaching = osDiskCaching;
  }

  public AzureStorageProfile updatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Date when the entity was last updated. The date is ISO 8601 and UTC.
   * @return updatedAt
  **/
  @ApiModelProperty(example = "2012-09-27", value = "Date when the entity was last updated. The date is ISO 8601 and UTC.")
  public String getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AzureStorageProfile azureStorageProfile = (AzureStorageProfile) o;
    return Objects.equals(this.owner, azureStorageProfile.owner) &&
        Objects.equals(this.links, azureStorageProfile.links) &&
        Objects.equals(this.supportsEncryption, azureStorageProfile.supportsEncryption) &&
        Objects.equals(this.externalRegionId, azureStorageProfile.externalRegionId) &&
        Objects.equals(this.cloudAccountId, azureStorageProfile.cloudAccountId) &&
        Objects.equals(this.description, azureStorageProfile.description) &&
        Objects.equals(this.dataDiskCaching, azureStorageProfile.dataDiskCaching) &&
        Objects.equals(this.orgId, azureStorageProfile.orgId) &&
        Objects.equals(this.tags, azureStorageProfile.tags) &&
        Objects.equals(this.organizationId, azureStorageProfile.organizationId) &&
        Objects.equals(this.createdAt, azureStorageProfile.createdAt) &&
        Objects.equals(this.name, azureStorageProfile.name) &&
        Objects.equals(this.id, azureStorageProfile.id) &&
        Objects.equals(this.defaultItem, azureStorageProfile.defaultItem) &&
        Objects.equals(this.diskType, azureStorageProfile.diskType) &&
        Objects.equals(this.osDiskCaching, azureStorageProfile.osDiskCaching) &&
        Objects.equals(this.updatedAt, azureStorageProfile.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(owner, links, supportsEncryption, externalRegionId, cloudAccountId, description, dataDiskCaching, orgId, tags, organizationId, createdAt, name, id, defaultItem, diskType, osDiskCaching, updatedAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AzureStorageProfile {\n");
    
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    supportsEncryption: ").append(toIndentedString(supportsEncryption)).append("\n");
    sb.append("    externalRegionId: ").append(toIndentedString(externalRegionId)).append("\n");
    sb.append("    cloudAccountId: ").append(toIndentedString(cloudAccountId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    dataDiskCaching: ").append(toIndentedString(dataDiskCaching)).append("\n");
    sb.append("    orgId: ").append(toIndentedString(orgId)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    organizationId: ").append(toIndentedString(organizationId)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    defaultItem: ").append(toIndentedString(defaultItem)).append("\n");
    sb.append("    diskType: ").append(toIndentedString(diskType)).append("\n");
    sb.append("    osDiskCaching: ").append(toIndentedString(osDiskCaching)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

