/*
 * VMware Cloud Assembly Blueprint API
 * A multi-cloud Blueprint API for Cloud Automation Services
 *
 * OpenAPI spec version: 2019-09-12
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package net.virtualviking.vra.jenkinsplugin.model.blueprint;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * BlueprintVersionRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-08-31T20:41:57.276-04:00")



public class BlueprintVersionRequest {
  @SerializedName("changeLog")
  private String changeLog = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("release")
  private Boolean release = null;

  @SerializedName("version")
  private String version = null;

  public BlueprintVersionRequest changeLog(String changeLog) {
    this.changeLog = changeLog;
    return this;
  }

   /**
   * Blueprint version change log
   * @return changeLog
  **/
  @ApiModelProperty(value = "Blueprint version change log")
  public String getChangeLog() {
    return changeLog;
  }

  public void setChangeLog(String changeLog) {
    this.changeLog = changeLog;
  }

  public BlueprintVersionRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Blueprint version description
   * @return description
  **/
  @ApiModelProperty(value = "Blueprint version description")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public BlueprintVersionRequest release(Boolean release) {
    this.release = release;
    return this;
  }

   /**
   * Flag indicating to release version
   * @return release
  **/
  @ApiModelProperty(value = "Flag indicating to release version")
  public Boolean isRelease() {
    return release;
  }

  public void setRelease(Boolean release) {
    this.release = release;
  }

  public BlueprintVersionRequest version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Blueprint version
   * @return version
  **/
  @ApiModelProperty(required = true, value = "Blueprint version")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BlueprintVersionRequest blueprintVersionRequest = (BlueprintVersionRequest) o;
    return Objects.equals(this.changeLog, blueprintVersionRequest.changeLog) &&
        Objects.equals(this.description, blueprintVersionRequest.description) &&
        Objects.equals(this.release, blueprintVersionRequest.release) &&
        Objects.equals(this.version, blueprintVersionRequest.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(changeLog, description, release, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BlueprintVersionRequest {\n");
    
    sb.append("    changeLog: ").append(toIndentedString(changeLog)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    release: ").append(toIndentedString(release)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

