/*
 * VMware Cloud Assembly IaaS API
 * A multi-cloud IaaS API for Cloud Automation Services
 *
 * OpenAPI spec version: 2019-01-15
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package net.virtualviking.vra.jenkinsplugin.model.iaas;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * NAT Rule
 */
@ApiModel(description = "NAT Rule")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-01T10:54:54.585-04:00")



public class NatRule {
  @SerializedName("protocol")
  private String protocol = null;

  @SerializedName("sourceIPs")
  private String sourceIPs = null;

  @SerializedName("translatedPorts")
  private String translatedPorts = null;

  @SerializedName("kind")
  private String kind = null;

  @SerializedName("targetLink")
  private String targetLink = null;

  @SerializedName("destinationPorts")
  private String destinationPorts = null;

  @SerializedName("index")
  private Integer index = null;

  @SerializedName("sourcePorts")
  private String sourcePorts = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("type")
  private String type = null;

  public NatRule protocol(String protocol) {
    this.protocol = protocol;
    return this;
  }

   /**
   * The protocol of the incoming requests. Default is TCP.
   * @return protocol
  **/
  @ApiModelProperty(example = "TCP, UDP", value = "The protocol of the incoming requests. Default is TCP.")
  public String getProtocol() {
    return protocol;
  }

  public void setProtocol(String protocol) {
    this.protocol = protocol;
  }

  public NatRule sourceIPs(String sourceIPs) {
    this.sourceIPs = sourceIPs;
    return this;
  }

   /**
   * The IP of the external source. Default is &#x60;any&#x60;
   * @return sourceIPs
  **/
  @ApiModelProperty(example = "any, 10.20.156.101", value = "The IP of the external source. Default is `any`")
  public String getSourceIPs() {
    return sourceIPs;
  }

  public void setSourceIPs(String sourceIPs) {
    this.sourceIPs = sourceIPs;
  }

  public NatRule translatedPorts(String translatedPorts) {
    this.translatedPorts = translatedPorts;
    return this;
  }

   /**
   * The machine port where the request will be forwarded
   * @return translatedPorts
  **/
  @ApiModelProperty(example = "any, 80, 5000-5100", required = true, value = "The machine port where the request will be forwarded")
  public String getTranslatedPorts() {
    return translatedPorts;
  }

  public void setTranslatedPorts(String translatedPorts) {
    this.translatedPorts = translatedPorts;
  }

  public NatRule kind(String kind) {
    this.kind = kind;
    return this;
  }

   /**
   * Kind of NAT: NAT44/NAT64/NAT66. Only NAT44 is supported currently
   * @return kind
  **/
  @ApiModelProperty(example = "NAT, NAT64,IPV6", value = "Kind of NAT: NAT44/NAT64/NAT66. Only NAT44 is supported currently")
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }

  public NatRule targetLink(String targetLink) {
    this.targetLink = targetLink;
    return this;
  }

   /**
   * A links to target load balancer or a machine&#39;s network interface where the request will be forwarded.
   * @return targetLink
  **/
  @ApiModelProperty(example = "/resource/load-balancers/{id}, /resources/network-interfaces/{id}", required = true, value = "A links to target load balancer or a machine's network interface where the request will be forwarded.")
  public String getTargetLink() {
    return targetLink;
  }

  public void setTargetLink(String targetLink) {
    this.targetLink = targetLink;
  }

  public NatRule destinationPorts(String destinationPorts) {
    this.destinationPorts = destinationPorts;
    return this;
  }

   /**
   * The edge gateway port
   * @return destinationPorts
  **/
  @ApiModelProperty(example = "any, 80, 5000-5100", required = true, value = "The edge gateway port")
  public String getDestinationPorts() {
    return destinationPorts;
  }

  public void setDestinationPorts(String destinationPorts) {
    this.destinationPorts = destinationPorts;
  }

  public NatRule index(Integer index) {
    this.index = index;
    return this;
  }

   /**
   * Index in which the rule must be applied
   * @return index
  **/
  @ApiModelProperty(required = true, value = "Index in which the rule must be applied")
  public Integer getIndex() {
    return index;
  }

  public void setIndex(Integer index) {
    this.index = index;
  }

  public NatRule sourcePorts(String sourcePorts) {
    this.sourcePorts = sourcePorts;
    return this;
  }

   /**
   * Ports from where the request is originating. Default is &#x60;any&#x60;
   * @return sourcePorts
  **/
  @ApiModelProperty(example = "any, 80, 5000-5100", value = "Ports from where the request is originating. Default is `any`")
  public String getSourcePorts() {
    return sourcePorts;
  }

  public void setSourcePorts(String sourcePorts) {
    this.sourcePorts = sourcePorts;
  }

  public NatRule description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description of the NAT rule.
   * @return description
  **/
  @ApiModelProperty(value = "Description of the NAT rule.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public NatRule type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Type of the NAT rule. Only DNAT is supported currently.
   * @return type
  **/
  @ApiModelProperty(example = "DNAT, SNAT", value = "Type of the NAT rule. Only DNAT is supported currently.")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NatRule natRule = (NatRule) o;
    return Objects.equals(this.protocol, natRule.protocol) &&
        Objects.equals(this.sourceIPs, natRule.sourceIPs) &&
        Objects.equals(this.translatedPorts, natRule.translatedPorts) &&
        Objects.equals(this.kind, natRule.kind) &&
        Objects.equals(this.targetLink, natRule.targetLink) &&
        Objects.equals(this.destinationPorts, natRule.destinationPorts) &&
        Objects.equals(this.index, natRule.index) &&
        Objects.equals(this.sourcePorts, natRule.sourcePorts) &&
        Objects.equals(this.description, natRule.description) &&
        Objects.equals(this.type, natRule.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(protocol, sourceIPs, translatedPorts, kind, targetLink, destinationPorts, index, sourcePorts, description, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NatRule {\n");
    
    sb.append("    protocol: ").append(toIndentedString(protocol)).append("\n");
    sb.append("    sourceIPs: ").append(toIndentedString(sourceIPs)).append("\n");
    sb.append("    translatedPorts: ").append(toIndentedString(translatedPorts)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    targetLink: ").append(toIndentedString(targetLink)).append("\n");
    sb.append("    destinationPorts: ").append(toIndentedString(destinationPorts)).append("\n");
    sb.append("    index: ").append(toIndentedString(index)).append("\n");
    sb.append("    sourcePorts: ").append(toIndentedString(sourcePorts)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

