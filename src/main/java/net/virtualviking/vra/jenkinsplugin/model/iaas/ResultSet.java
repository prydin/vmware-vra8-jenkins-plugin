/*
 * VMware Cloud Assembly IaaS API
 * A multi-cloud IaaS API for Cloud Automation Services
 *
 * OpenAPI spec version: 2019-01-15
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package net.virtualviking.vra.jenkinsplugin.model.iaas;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import net.virtualviking.vra.jenkinsplugin.model.iaas.ResultSetMetaData;
import net.virtualviking.vra.jenkinsplugin.model.iaas.SQLWarning;
import net.virtualviking.vra.jenkinsplugin.model.iaas.Statement;

/**
 * ResultSet
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-01T10:54:54.585-04:00")



public class ResultSet {
  @SerializedName("last")
  private Boolean last = null;

  @SerializedName("fetchSize")
  private Integer fetchSize = null;

  @SerializedName("warnings")
  private SQLWarning warnings = null;

  @SerializedName("beforeFirst")
  private Boolean beforeFirst = null;

  @SerializedName("type")
  private Integer type = null;

  @SerializedName("holdability")
  private Integer holdability = null;

  @SerializedName("fetchDirection")
  private Integer fetchDirection = null;

  @SerializedName("afterLast")
  private Boolean afterLast = null;

  @SerializedName("concurrency")
  private Integer concurrency = null;

  @SerializedName("metaData")
  private ResultSetMetaData metaData = null;

  @SerializedName("cursorName")
  private String cursorName = null;

  @SerializedName("statement")
  private Statement statement = null;

  @SerializedName("closed")
  private Boolean closed = null;

  @SerializedName("row")
  private Integer row = null;

  @SerializedName("first")
  private Boolean first = null;

  public ResultSet last(Boolean last) {
    this.last = last;
    return this;
  }

   /**
   * Get last
   * @return last
  **/
  @ApiModelProperty(value = "")
  public Boolean isLast() {
    return last;
  }

  public void setLast(Boolean last) {
    this.last = last;
  }

  public ResultSet fetchSize(Integer fetchSize) {
    this.fetchSize = fetchSize;
    return this;
  }

   /**
   * Get fetchSize
   * @return fetchSize
  **/
  @ApiModelProperty(value = "")
  public Integer getFetchSize() {
    return fetchSize;
  }

  public void setFetchSize(Integer fetchSize) {
    this.fetchSize = fetchSize;
  }

  public ResultSet warnings(SQLWarning warnings) {
    this.warnings = warnings;
    return this;
  }

   /**
   * Get warnings
   * @return warnings
  **/
  @ApiModelProperty(value = "")
  public SQLWarning getWarnings() {
    return warnings;
  }

  public void setWarnings(SQLWarning warnings) {
    this.warnings = warnings;
  }

  public ResultSet beforeFirst(Boolean beforeFirst) {
    this.beforeFirst = beforeFirst;
    return this;
  }

   /**
   * Get beforeFirst
   * @return beforeFirst
  **/
  @ApiModelProperty(value = "")
  public Boolean isBeforeFirst() {
    return beforeFirst;
  }

  public void setBeforeFirst(Boolean beforeFirst) {
    this.beforeFirst = beforeFirst;
  }

  public ResultSet type(Integer type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public Integer getType() {
    return type;
  }

  public void setType(Integer type) {
    this.type = type;
  }

  public ResultSet holdability(Integer holdability) {
    this.holdability = holdability;
    return this;
  }

   /**
   * Get holdability
   * @return holdability
  **/
  @ApiModelProperty(value = "")
  public Integer getHoldability() {
    return holdability;
  }

  public void setHoldability(Integer holdability) {
    this.holdability = holdability;
  }

  public ResultSet fetchDirection(Integer fetchDirection) {
    this.fetchDirection = fetchDirection;
    return this;
  }

   /**
   * Get fetchDirection
   * @return fetchDirection
  **/
  @ApiModelProperty(value = "")
  public Integer getFetchDirection() {
    return fetchDirection;
  }

  public void setFetchDirection(Integer fetchDirection) {
    this.fetchDirection = fetchDirection;
  }

  public ResultSet afterLast(Boolean afterLast) {
    this.afterLast = afterLast;
    return this;
  }

   /**
   * Get afterLast
   * @return afterLast
  **/
  @ApiModelProperty(value = "")
  public Boolean isAfterLast() {
    return afterLast;
  }

  public void setAfterLast(Boolean afterLast) {
    this.afterLast = afterLast;
  }

  public ResultSet concurrency(Integer concurrency) {
    this.concurrency = concurrency;
    return this;
  }

   /**
   * Get concurrency
   * @return concurrency
  **/
  @ApiModelProperty(value = "")
  public Integer getConcurrency() {
    return concurrency;
  }

  public void setConcurrency(Integer concurrency) {
    this.concurrency = concurrency;
  }

  public ResultSet metaData(ResultSetMetaData metaData) {
    this.metaData = metaData;
    return this;
  }

   /**
   * Get metaData
   * @return metaData
  **/
  @ApiModelProperty(value = "")
  public ResultSetMetaData getMetaData() {
    return metaData;
  }

  public void setMetaData(ResultSetMetaData metaData) {
    this.metaData = metaData;
  }

  public ResultSet cursorName(String cursorName) {
    this.cursorName = cursorName;
    return this;
  }

   /**
   * Get cursorName
   * @return cursorName
  **/
  @ApiModelProperty(value = "")
  public String getCursorName() {
    return cursorName;
  }

  public void setCursorName(String cursorName) {
    this.cursorName = cursorName;
  }

  public ResultSet statement(Statement statement) {
    this.statement = statement;
    return this;
  }

   /**
   * Get statement
   * @return statement
  **/
  @ApiModelProperty(value = "")
  public Statement getStatement() {
    return statement;
  }

  public void setStatement(Statement statement) {
    this.statement = statement;
  }

  public ResultSet closed(Boolean closed) {
    this.closed = closed;
    return this;
  }

   /**
   * Get closed
   * @return closed
  **/
  @ApiModelProperty(value = "")
  public Boolean isClosed() {
    return closed;
  }

  public void setClosed(Boolean closed) {
    this.closed = closed;
  }

  public ResultSet row(Integer row) {
    this.row = row;
    return this;
  }

   /**
   * Get row
   * @return row
  **/
  @ApiModelProperty(value = "")
  public Integer getRow() {
    return row;
  }

  public void setRow(Integer row) {
    this.row = row;
  }

  public ResultSet first(Boolean first) {
    this.first = first;
    return this;
  }

   /**
   * Get first
   * @return first
  **/
  @ApiModelProperty(value = "")
  public Boolean isFirst() {
    return first;
  }

  public void setFirst(Boolean first) {
    this.first = first;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResultSet resultSet = (ResultSet) o;
    return Objects.equals(this.last, resultSet.last) &&
        Objects.equals(this.fetchSize, resultSet.fetchSize) &&
        Objects.equals(this.warnings, resultSet.warnings) &&
        Objects.equals(this.beforeFirst, resultSet.beforeFirst) &&
        Objects.equals(this.type, resultSet.type) &&
        Objects.equals(this.holdability, resultSet.holdability) &&
        Objects.equals(this.fetchDirection, resultSet.fetchDirection) &&
        Objects.equals(this.afterLast, resultSet.afterLast) &&
        Objects.equals(this.concurrency, resultSet.concurrency) &&
        Objects.equals(this.metaData, resultSet.metaData) &&
        Objects.equals(this.cursorName, resultSet.cursorName) &&
        Objects.equals(this.statement, resultSet.statement) &&
        Objects.equals(this.closed, resultSet.closed) &&
        Objects.equals(this.row, resultSet.row) &&
        Objects.equals(this.first, resultSet.first);
  }

  @Override
  public int hashCode() {
    return Objects.hash(last, fetchSize, warnings, beforeFirst, type, holdability, fetchDirection, afterLast, concurrency, metaData, cursorName, statement, closed, row, first);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResultSet {\n");
    
    sb.append("    last: ").append(toIndentedString(last)).append("\n");
    sb.append("    fetchSize: ").append(toIndentedString(fetchSize)).append("\n");
    sb.append("    warnings: ").append(toIndentedString(warnings)).append("\n");
    sb.append("    beforeFirst: ").append(toIndentedString(beforeFirst)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    holdability: ").append(toIndentedString(holdability)).append("\n");
    sb.append("    fetchDirection: ").append(toIndentedString(fetchDirection)).append("\n");
    sb.append("    afterLast: ").append(toIndentedString(afterLast)).append("\n");
    sb.append("    concurrency: ").append(toIndentedString(concurrency)).append("\n");
    sb.append("    metaData: ").append(toIndentedString(metaData)).append("\n");
    sb.append("    cursorName: ").append(toIndentedString(cursorName)).append("\n");
    sb.append("    statement: ").append(toIndentedString(statement)).append("\n");
    sb.append("    closed: ").append(toIndentedString(closed)).append("\n");
    sb.append("    row: ").append(toIndentedString(row)).append("\n");
    sb.append("    first: ").append(toIndentedString(first)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

