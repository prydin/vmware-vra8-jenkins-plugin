/*
 * VMware Cloud Assembly Blueprint API
 * A multi-cloud Blueprint API for Cloud Automation Services
 *
 * OpenAPI spec version: 2019-09-12
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package net.virtualviking.vra.jenkinsplugin.model.blueprint;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import net.virtualviking.vra.jenkinsplugin.model.blueprint.PropertyDefinition;

/**
 * PropertyDefinition
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-08-31T20:41:57.276-04:00")



public class PropertyDefinition {
  @SerializedName("$data")
  private String data = null;

  @SerializedName("$ref")
  private String ref = null;

  @SerializedName("additionalProperties")
  private Boolean additionalProperties = null;

  @SerializedName("allOf")
  private List<PropertyDefinition> allOf = null;

  @SerializedName("computed")
  private Boolean computed = null;

  @SerializedName("const")
  private Object _const = null;

  @SerializedName("default")
  private Object _default = null;

  @SerializedName("dependencies")
  private Map<String, List<String>> dependencies = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("encrypted")
  private Boolean encrypted = null;

  @SerializedName("enum")
  private List<Object> _enum = null;

  @SerializedName("format")
  private String format = null;

  @SerializedName("ignoreCaseOnDiff")
  private Boolean ignoreCaseOnDiff = null;

  @SerializedName("ignoreOnUpdate")
  private Boolean ignoreOnUpdate = null;

  @SerializedName("items")
  private PropertyDefinition items = null;

  @SerializedName("maxItems")
  private Long maxItems = null;

  @SerializedName("maxLength")
  private Integer maxLength = null;

  @SerializedName("maximum")
  private Long maximum = null;

  @SerializedName("minItems")
  private Long minItems = null;

  @SerializedName("minLength")
  private Integer minLength = null;

  @SerializedName("minimum")
  private Long minimum = null;

  @SerializedName("not")
  private PropertyDefinition not = null;

  @SerializedName("oneOf")
  private List<PropertyDefinition> oneOf = null;

  @SerializedName("pattern")
  private String pattern = null;

  @SerializedName("properties")
  private Map<String, PropertyDefinition> properties = null;

  @SerializedName("readOnly")
  private Boolean readOnly = null;

  @SerializedName("recreateOnUpdate")
  private Boolean recreateOnUpdate = null;

  @SerializedName("required")
  private List<String> required = null;

  @SerializedName("title")
  private String title = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("uniqueItems")
  private Boolean uniqueItems = null;

  @SerializedName("writeOnly")
  private Boolean writeOnly = null;

  public PropertyDefinition data(String data) {
    this.data = data;
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  @ApiModelProperty(value = "")
  public String getData() {
    return data;
  }

  public void setData(String data) {
    this.data = data;
  }

  public PropertyDefinition ref(String ref) {
    this.ref = ref;
    return this;
  }

   /**
   * Get ref
   * @return ref
  **/
  @ApiModelProperty(value = "")
  public String getRef() {
    return ref;
  }

  public void setRef(String ref) {
    this.ref = ref;
  }

  public PropertyDefinition additionalProperties(Boolean additionalProperties) {
    this.additionalProperties = additionalProperties;
    return this;
  }

   /**
   * Get additionalProperties
   * @return additionalProperties
  **/
  @ApiModelProperty(value = "")
  public Boolean isAdditionalProperties() {
    return additionalProperties;
  }

  public void setAdditionalProperties(Boolean additionalProperties) {
    this.additionalProperties = additionalProperties;
  }

  public PropertyDefinition allOf(List<PropertyDefinition> allOf) {
    this.allOf = allOf;
    return this;
  }

  public PropertyDefinition addAllOfItem(PropertyDefinition allOfItem) {
    if (this.allOf == null) {
      this.allOf = new ArrayList<PropertyDefinition>();
    }
    this.allOf.add(allOfItem);
    return this;
  }

   /**
   * Get allOf
   * @return allOf
  **/
  @ApiModelProperty(value = "")
  public List<PropertyDefinition> getAllOf() {
    return allOf;
  }

  public void setAllOf(List<PropertyDefinition> allOf) {
    this.allOf = allOf;
  }

  public PropertyDefinition computed(Boolean computed) {
    this.computed = computed;
    return this;
  }

   /**
   * Get computed
   * @return computed
  **/
  @ApiModelProperty(value = "")
  public Boolean isComputed() {
    return computed;
  }

  public void setComputed(Boolean computed) {
    this.computed = computed;
  }

  public PropertyDefinition _const(Object _const) {
    this._const = _const;
    return this;
  }

   /**
   * Get _const
   * @return _const
  **/
  @ApiModelProperty(value = "")
  public Object getConst() {
    return _const;
  }

  public void setConst(Object _const) {
    this._const = _const;
  }

  public PropertyDefinition _default(Object _default) {
    this._default = _default;
    return this;
  }

   /**
   * Get _default
   * @return _default
  **/
  @ApiModelProperty(value = "")
  public Object getDefault() {
    return _default;
  }

  public void setDefault(Object _default) {
    this._default = _default;
  }

  public PropertyDefinition dependencies(Map<String, List<String>> dependencies) {
    this.dependencies = dependencies;
    return this;
  }

  public PropertyDefinition putDependenciesItem(String key, List<String> dependenciesItem) {
    if (this.dependencies == null) {
      this.dependencies = new HashMap<String, List<String>>();
    }
    this.dependencies.put(key, dependenciesItem);
    return this;
  }

   /**
   * Get dependencies
   * @return dependencies
  **/
  @ApiModelProperty(value = "")
  public Map<String, List<String>> getDependencies() {
    return dependencies;
  }

  public void setDependencies(Map<String, List<String>> dependencies) {
    this.dependencies = dependencies;
  }

  public PropertyDefinition description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public PropertyDefinition encrypted(Boolean encrypted) {
    this.encrypted = encrypted;
    return this;
  }

   /**
   * Get encrypted
   * @return encrypted
  **/
  @ApiModelProperty(value = "")
  public Boolean isEncrypted() {
    return encrypted;
  }

  public void setEncrypted(Boolean encrypted) {
    this.encrypted = encrypted;
  }

  public PropertyDefinition _enum(List<Object> _enum) {
    this._enum = _enum;
    return this;
  }

  public PropertyDefinition addEnumItem(Object _enumItem) {
    if (this._enum == null) {
      this._enum = new ArrayList<Object>();
    }
    this._enum.add(_enumItem);
    return this;
  }

   /**
   * Get _enum
   * @return _enum
  **/
  @ApiModelProperty(value = "")
  public List<Object> getEnum() {
    return _enum;
  }

  public void setEnum(List<Object> _enum) {
    this._enum = _enum;
  }

  public PropertyDefinition format(String format) {
    this.format = format;
    return this;
  }

   /**
   * Get format
   * @return format
  **/
  @ApiModelProperty(value = "")
  public String getFormat() {
    return format;
  }

  public void setFormat(String format) {
    this.format = format;
  }

  public PropertyDefinition ignoreCaseOnDiff(Boolean ignoreCaseOnDiff) {
    this.ignoreCaseOnDiff = ignoreCaseOnDiff;
    return this;
  }

   /**
   * Get ignoreCaseOnDiff
   * @return ignoreCaseOnDiff
  **/
  @ApiModelProperty(value = "")
  public Boolean isIgnoreCaseOnDiff() {
    return ignoreCaseOnDiff;
  }

  public void setIgnoreCaseOnDiff(Boolean ignoreCaseOnDiff) {
    this.ignoreCaseOnDiff = ignoreCaseOnDiff;
  }

  public PropertyDefinition ignoreOnUpdate(Boolean ignoreOnUpdate) {
    this.ignoreOnUpdate = ignoreOnUpdate;
    return this;
  }

   /**
   * Get ignoreOnUpdate
   * @return ignoreOnUpdate
  **/
  @ApiModelProperty(value = "")
  public Boolean isIgnoreOnUpdate() {
    return ignoreOnUpdate;
  }

  public void setIgnoreOnUpdate(Boolean ignoreOnUpdate) {
    this.ignoreOnUpdate = ignoreOnUpdate;
  }

  public PropertyDefinition items(PropertyDefinition items) {
    this.items = items;
    return this;
  }

   /**
   * Get items
   * @return items
  **/
  @ApiModelProperty(value = "")
  public PropertyDefinition getItems() {
    return items;
  }

  public void setItems(PropertyDefinition items) {
    this.items = items;
  }

  public PropertyDefinition maxItems(Long maxItems) {
    this.maxItems = maxItems;
    return this;
  }

   /**
   * Get maxItems
   * @return maxItems
  **/
  @ApiModelProperty(value = "")
  public Long getMaxItems() {
    return maxItems;
  }

  public void setMaxItems(Long maxItems) {
    this.maxItems = maxItems;
  }

  public PropertyDefinition maxLength(Integer maxLength) {
    this.maxLength = maxLength;
    return this;
  }

   /**
   * Get maxLength
   * @return maxLength
  **/
  @ApiModelProperty(value = "")
  public Integer getMaxLength() {
    return maxLength;
  }

  public void setMaxLength(Integer maxLength) {
    this.maxLength = maxLength;
  }

  public PropertyDefinition maximum(Long maximum) {
    this.maximum = maximum;
    return this;
  }

   /**
   * Get maximum
   * @return maximum
  **/
  @ApiModelProperty(value = "")
  public Long getMaximum() {
    return maximum;
  }

  public void setMaximum(Long maximum) {
    this.maximum = maximum;
  }

  public PropertyDefinition minItems(Long minItems) {
    this.minItems = minItems;
    return this;
  }

   /**
   * Get minItems
   * @return minItems
  **/
  @ApiModelProperty(value = "")
  public Long getMinItems() {
    return minItems;
  }

  public void setMinItems(Long minItems) {
    this.minItems = minItems;
  }

  public PropertyDefinition minLength(Integer minLength) {
    this.minLength = minLength;
    return this;
  }

   /**
   * Get minLength
   * @return minLength
  **/
  @ApiModelProperty(value = "")
  public Integer getMinLength() {
    return minLength;
  }

  public void setMinLength(Integer minLength) {
    this.minLength = minLength;
  }

  public PropertyDefinition minimum(Long minimum) {
    this.minimum = minimum;
    return this;
  }

   /**
   * Get minimum
   * @return minimum
  **/
  @ApiModelProperty(value = "")
  public Long getMinimum() {
    return minimum;
  }

  public void setMinimum(Long minimum) {
    this.minimum = minimum;
  }

  public PropertyDefinition not(PropertyDefinition not) {
    this.not = not;
    return this;
  }

   /**
   * Get not
   * @return not
  **/
  @ApiModelProperty(value = "")
  public PropertyDefinition getNot() {
    return not;
  }

  public void setNot(PropertyDefinition not) {
    this.not = not;
  }

  public PropertyDefinition oneOf(List<PropertyDefinition> oneOf) {
    this.oneOf = oneOf;
    return this;
  }

  public PropertyDefinition addOneOfItem(PropertyDefinition oneOfItem) {
    if (this.oneOf == null) {
      this.oneOf = new ArrayList<PropertyDefinition>();
    }
    this.oneOf.add(oneOfItem);
    return this;
  }

   /**
   * Get oneOf
   * @return oneOf
  **/
  @ApiModelProperty(value = "")
  public List<PropertyDefinition> getOneOf() {
    return oneOf;
  }

  public void setOneOf(List<PropertyDefinition> oneOf) {
    this.oneOf = oneOf;
  }

  public PropertyDefinition pattern(String pattern) {
    this.pattern = pattern;
    return this;
  }

   /**
   * Get pattern
   * @return pattern
  **/
  @ApiModelProperty(value = "")
  public String getPattern() {
    return pattern;
  }

  public void setPattern(String pattern) {
    this.pattern = pattern;
  }

  public PropertyDefinition properties(Map<String, PropertyDefinition> properties) {
    this.properties = properties;
    return this;
  }

  public PropertyDefinition putPropertiesItem(String key, PropertyDefinition propertiesItem) {
    if (this.properties == null) {
      this.properties = new HashMap<String, PropertyDefinition>();
    }
    this.properties.put(key, propertiesItem);
    return this;
  }

   /**
   * Get properties
   * @return properties
  **/
  @ApiModelProperty(value = "")
  public Map<String, PropertyDefinition> getProperties() {
    return properties;
  }

  public void setProperties(Map<String, PropertyDefinition> properties) {
    this.properties = properties;
  }

  public PropertyDefinition readOnly(Boolean readOnly) {
    this.readOnly = readOnly;
    return this;
  }

   /**
   * Get readOnly
   * @return readOnly
  **/
  @ApiModelProperty(value = "")
  public Boolean isReadOnly() {
    return readOnly;
  }

  public void setReadOnly(Boolean readOnly) {
    this.readOnly = readOnly;
  }

  public PropertyDefinition recreateOnUpdate(Boolean recreateOnUpdate) {
    this.recreateOnUpdate = recreateOnUpdate;
    return this;
  }

   /**
   * Get recreateOnUpdate
   * @return recreateOnUpdate
  **/
  @ApiModelProperty(value = "")
  public Boolean isRecreateOnUpdate() {
    return recreateOnUpdate;
  }

  public void setRecreateOnUpdate(Boolean recreateOnUpdate) {
    this.recreateOnUpdate = recreateOnUpdate;
  }

  public PropertyDefinition required(List<String> required) {
    this.required = required;
    return this;
  }

  public PropertyDefinition addRequiredItem(String requiredItem) {
    if (this.required == null) {
      this.required = new ArrayList<String>();
    }
    this.required.add(requiredItem);
    return this;
  }

   /**
   * Get required
   * @return required
  **/
  @ApiModelProperty(value = "")
  public List<String> getRequired() {
    return required;
  }

  public void setRequired(List<String> required) {
    this.required = required;
  }

  public PropertyDefinition title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @ApiModelProperty(value = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public PropertyDefinition type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public PropertyDefinition uniqueItems(Boolean uniqueItems) {
    this.uniqueItems = uniqueItems;
    return this;
  }

   /**
   * Get uniqueItems
   * @return uniqueItems
  **/
  @ApiModelProperty(value = "")
  public Boolean isUniqueItems() {
    return uniqueItems;
  }

  public void setUniqueItems(Boolean uniqueItems) {
    this.uniqueItems = uniqueItems;
  }

  public PropertyDefinition writeOnly(Boolean writeOnly) {
    this.writeOnly = writeOnly;
    return this;
  }

   /**
   * Get writeOnly
   * @return writeOnly
  **/
  @ApiModelProperty(value = "")
  public Boolean isWriteOnly() {
    return writeOnly;
  }

  public void setWriteOnly(Boolean writeOnly) {
    this.writeOnly = writeOnly;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PropertyDefinition propertyDefinition = (PropertyDefinition) o;
    return Objects.equals(this.data, propertyDefinition.data) &&
        Objects.equals(this.ref, propertyDefinition.ref) &&
        Objects.equals(this.additionalProperties, propertyDefinition.additionalProperties) &&
        Objects.equals(this.allOf, propertyDefinition.allOf) &&
        Objects.equals(this.computed, propertyDefinition.computed) &&
        Objects.equals(this._const, propertyDefinition._const) &&
        Objects.equals(this._default, propertyDefinition._default) &&
        Objects.equals(this.dependencies, propertyDefinition.dependencies) &&
        Objects.equals(this.description, propertyDefinition.description) &&
        Objects.equals(this.encrypted, propertyDefinition.encrypted) &&
        Objects.equals(this._enum, propertyDefinition._enum) &&
        Objects.equals(this.format, propertyDefinition.format) &&
        Objects.equals(this.ignoreCaseOnDiff, propertyDefinition.ignoreCaseOnDiff) &&
        Objects.equals(this.ignoreOnUpdate, propertyDefinition.ignoreOnUpdate) &&
        Objects.equals(this.items, propertyDefinition.items) &&
        Objects.equals(this.maxItems, propertyDefinition.maxItems) &&
        Objects.equals(this.maxLength, propertyDefinition.maxLength) &&
        Objects.equals(this.maximum, propertyDefinition.maximum) &&
        Objects.equals(this.minItems, propertyDefinition.minItems) &&
        Objects.equals(this.minLength, propertyDefinition.minLength) &&
        Objects.equals(this.minimum, propertyDefinition.minimum) &&
        Objects.equals(this.not, propertyDefinition.not) &&
        Objects.equals(this.oneOf, propertyDefinition.oneOf) &&
        Objects.equals(this.pattern, propertyDefinition.pattern) &&
        Objects.equals(this.properties, propertyDefinition.properties) &&
        Objects.equals(this.readOnly, propertyDefinition.readOnly) &&
        Objects.equals(this.recreateOnUpdate, propertyDefinition.recreateOnUpdate) &&
        Objects.equals(this.required, propertyDefinition.required) &&
        Objects.equals(this.title, propertyDefinition.title) &&
        Objects.equals(this.type, propertyDefinition.type) &&
        Objects.equals(this.uniqueItems, propertyDefinition.uniqueItems) &&
        Objects.equals(this.writeOnly, propertyDefinition.writeOnly);
  }

  @Override
  public int hashCode() {
    return Objects.hash(data, ref, additionalProperties, allOf, computed, _const, _default, dependencies, description, encrypted, _enum, format, ignoreCaseOnDiff, ignoreOnUpdate, items, maxItems, maxLength, maximum, minItems, minLength, minimum, not, oneOf, pattern, properties, readOnly, recreateOnUpdate, required, title, type, uniqueItems, writeOnly);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PropertyDefinition {\n");
    
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    ref: ").append(toIndentedString(ref)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("    allOf: ").append(toIndentedString(allOf)).append("\n");
    sb.append("    computed: ").append(toIndentedString(computed)).append("\n");
    sb.append("    _const: ").append(toIndentedString(_const)).append("\n");
    sb.append("    _default: ").append(toIndentedString(_default)).append("\n");
    sb.append("    dependencies: ").append(toIndentedString(dependencies)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    encrypted: ").append(toIndentedString(encrypted)).append("\n");
    sb.append("    _enum: ").append(toIndentedString(_enum)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    ignoreCaseOnDiff: ").append(toIndentedString(ignoreCaseOnDiff)).append("\n");
    sb.append("    ignoreOnUpdate: ").append(toIndentedString(ignoreOnUpdate)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    maxItems: ").append(toIndentedString(maxItems)).append("\n");
    sb.append("    maxLength: ").append(toIndentedString(maxLength)).append("\n");
    sb.append("    maximum: ").append(toIndentedString(maximum)).append("\n");
    sb.append("    minItems: ").append(toIndentedString(minItems)).append("\n");
    sb.append("    minLength: ").append(toIndentedString(minLength)).append("\n");
    sb.append("    minimum: ").append(toIndentedString(minimum)).append("\n");
    sb.append("    not: ").append(toIndentedString(not)).append("\n");
    sb.append("    oneOf: ").append(toIndentedString(oneOf)).append("\n");
    sb.append("    pattern: ").append(toIndentedString(pattern)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    readOnly: ").append(toIndentedString(readOnly)).append("\n");
    sb.append("    recreateOnUpdate: ").append(toIndentedString(recreateOnUpdate)).append("\n");
    sb.append("    required: ").append(toIndentedString(required)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    uniqueItems: ").append(toIndentedString(uniqueItems)).append("\n");
    sb.append("    writeOnly: ").append(toIndentedString(writeOnly)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

