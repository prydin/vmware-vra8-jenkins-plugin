/*
 * VMware Cloud Assembly IaaS API
 * A multi-cloud IaaS API for Cloud Automation Services
 *
 * OpenAPI spec version: 2019-01-15
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package net.virtualviking.vra.jenkinsplugin.model.iaas;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import net.virtualviking.vra.jenkinsplugin.model.iaas.Href;
import net.virtualviking.vra.jenkinsplugin.model.iaas.ImageMappingDescription;

/**
 * Describes an image mapping between image key and fabric image.&lt;br&gt;**HATEOAS** links:&lt;br&gt;**region** - Region - Region for the mapping.
 */
@ApiModel(description = "Describes an image mapping between image key and fabric image.<br>**HATEOAS** links:<br>**region** - Region - Region for the mapping.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-01T10:54:54.585-04:00")



public class ImageMapping {
  @SerializedName("mapping")
  private Map<String, ImageMappingDescription> mapping = new HashMap<String, ImageMappingDescription>();

  @SerializedName("externalRegionId")
  private String externalRegionId = null;

  @SerializedName("_links")
  private Map<String, Href> links = new HashMap<String, Href>();

  public ImageMapping mapping(Map<String, ImageMappingDescription> mapping) {
    this.mapping = mapping;
    return this;
  }

  public ImageMapping putMappingItem(String key, ImageMappingDescription mappingItem) {
    this.mapping.put(key, mappingItem);
    return this;
  }

   /**
   * Image mapping defined for the particular region.
   * @return mapping
  **/
  @ApiModelProperty(example = "\"{ \\\"ubuntu\\\" : {\\\"externalRegionId\\\": \\\"us-east-1\\\", \\\"externalId\\\": \\\"ami-2c7b5656\\\", \\\"name\\\": \\\"ami-ubuntu-16.04\\\", \\\"description\\\": \\\"instance-store - HVM - supports - UTF-8 - tools\\\"} }\"", required = true, value = "Image mapping defined for the particular region.")
  public Map<String, ImageMappingDescription> getMapping() {
    return mapping;
  }

  public void setMapping(Map<String, ImageMappingDescription> mapping) {
    this.mapping = mapping;
  }

  public ImageMapping externalRegionId(String externalRegionId) {
    this.externalRegionId = externalRegionId;
    return this;
  }

   /**
   * The id of the region for which this mapping is defined.
   * @return externalRegionId
  **/
  @ApiModelProperty(example = "us-east-1", value = "The id of the region for which this mapping is defined.")
  public String getExternalRegionId() {
    return externalRegionId;
  }

  public void setExternalRegionId(String externalRegionId) {
    this.externalRegionId = externalRegionId;
  }

  public ImageMapping links(Map<String, Href> links) {
    this.links = links;
    return this;
  }

  public ImageMapping putLinksItem(String key, Href linksItem) {
    this.links.put(key, linksItem);
    return this;
  }

   /**
   * HATEOAS of the entity
   * @return links
  **/
  @ApiModelProperty(required = true, value = "HATEOAS of the entity")
  public Map<String, Href> getLinks() {
    return links;
  }

  public void setLinks(Map<String, Href> links) {
    this.links = links;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ImageMapping imageMapping = (ImageMapping) o;
    return Objects.equals(this.mapping, imageMapping.mapping) &&
        Objects.equals(this.externalRegionId, imageMapping.externalRegionId) &&
        Objects.equals(this.links, imageMapping.links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mapping, externalRegionId, links);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ImageMapping {\n");
    
    sb.append("    mapping: ").append(toIndentedString(mapping)).append("\n");
    sb.append("    externalRegionId: ").append(toIndentedString(externalRegionId)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

