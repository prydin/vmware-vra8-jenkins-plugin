/*
 * Copyright (c) 2020 VMware, Inc
 *
 *  SPDX-License-Identifier: MIT
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/*
 * VMware Cloud Assembly IaaS API
 * A multi-cloud IaaS API for Cloud Automation Services
 *
 * OpenAPI spec version: 2019-01-15
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.vra.jenkinsplugin.model.iaas;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;

/** Specification for attaching nic to machine */
@Schema(description = "Specification for attaching nic to machine")
@javax.annotation.Generated(
    value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen",
    date = "2020-09-09T18:26:35.661905-04:00[America/New_York]")
public class NetworkInterfaceSpecification {
  @SerializedName("addresses")
  private List<String> addresses = null;

  @SerializedName("customProperties")
  private Map<String, String> customProperties = null;

  @SerializedName("securityGroupIds")
  private List<String> securityGroupIds = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("networkId")
  private String networkId = null;

  @SerializedName("deviceIndex")
  private Integer deviceIndex = null;

  public NetworkInterfaceSpecification addresses(List<String> addresses) {
    this.addresses = addresses;
    return this;
  }

  public NetworkInterfaceSpecification addAddressesItem(String addressesItem) {
    if (this.addresses == null) {
      this.addresses = new ArrayList<String>();
    }
    this.addresses.add(addressesItem);
    return this;
  }

  /**
   * A list of IP addresses allocated or in use by this network interface.
   *
   * @return addresses
   */
  @Schema(
      example = "[ \"10.1.2.190\" ]",
      description = "A list of IP addresses allocated or in use by this network interface.")
  public List<String> getAddresses() {
    return addresses;
  }

  public void setAddresses(List<String> addresses) {
    this.addresses = addresses;
  }

  public NetworkInterfaceSpecification customProperties(Map<String, String> customProperties) {
    this.customProperties = customProperties;
    return this;
  }

  public NetworkInterfaceSpecification putCustomPropertiesItem(
      String key, String customPropertiesItem) {
    if (this.customProperties == null) {
      this.customProperties = new HashMap<String, String>();
    }
    this.customProperties.put(key, customPropertiesItem);
    return this;
  }

  /**
   * Additional properties that may be used to extend the base type.
   *
   * @return customProperties
   */
  @Schema(
      example = "{ \"awaitIp\" : \"true\" }",
      description = "Additional properties that may be used to extend the base type.")
  public Map<String, String> getCustomProperties() {
    return customProperties;
  }

  public void setCustomProperties(Map<String, String> customProperties) {
    this.customProperties = customProperties;
  }

  public NetworkInterfaceSpecification securityGroupIds(List<String> securityGroupIds) {
    this.securityGroupIds = securityGroupIds;
    return this;
  }

  public NetworkInterfaceSpecification addSecurityGroupIdsItem(String securityGroupIdsItem) {
    if (this.securityGroupIds == null) {
      this.securityGroupIds = new ArrayList<String>();
    }
    this.securityGroupIds.add(securityGroupIdsItem);
    return this;
  }

  /**
   * A list of security group ids which this network interface will be assigned to.
   *
   * @return securityGroupIds
   */
  @Schema(
      description =
          "A list of security group ids which this network interface will be assigned to.")
  public List<String> getSecurityGroupIds() {
    return securityGroupIds;
  }

  public void setSecurityGroupIds(List<String> securityGroupIds) {
    this.securityGroupIds = securityGroupIds;
  }

  public NetworkInterfaceSpecification name(String name) {
    this.name = name;
    return this;
  }

  /**
   * A human-friendly name used as an identifier in APIs that support this option.
   *
   * @return name
   */
  @Schema(
      description = "A human-friendly name used as an identifier in APIs that support this option.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public NetworkInterfaceSpecification description(String description) {
    this.description = description;
    return this;
  }

  /**
   * A human-friendly description.
   *
   * @return description
   */
  @Schema(description = "A human-friendly description.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public NetworkInterfaceSpecification networkId(String networkId) {
    this.networkId = networkId;
    return this;
  }

  /**
   * Id of the network instance that this network interface plugs into.
   *
   * @return networkId
   */
  @Schema(
      example = "dcd9",
      required = true,
      description = "Id of the network instance that this network interface plugs into.")
  public String getNetworkId() {
    return networkId;
  }

  public void setNetworkId(String networkId) {
    this.networkId = networkId;
  }

  public NetworkInterfaceSpecification deviceIndex(Integer deviceIndex) {
    this.deviceIndex = deviceIndex;
    return this;
  }

  /**
   * The device index of this network interface.
   *
   * @return deviceIndex
   */
  @Schema(example = "1", description = "The device index of this network interface.")
  public Integer getDeviceIndex() {
    return deviceIndex;
  }

  public void setDeviceIndex(Integer deviceIndex) {
    this.deviceIndex = deviceIndex;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NetworkInterfaceSpecification networkInterfaceSpecification = (NetworkInterfaceSpecification) o;
    return Objects.equals(this.addresses, networkInterfaceSpecification.addresses)
        && Objects.equals(this.customProperties, networkInterfaceSpecification.customProperties)
        && Objects.equals(this.securityGroupIds, networkInterfaceSpecification.securityGroupIds)
        && Objects.equals(this.name, networkInterfaceSpecification.name)
        && Objects.equals(this.description, networkInterfaceSpecification.description)
        && Objects.equals(this.networkId, networkInterfaceSpecification.networkId)
        && Objects.equals(this.deviceIndex, networkInterfaceSpecification.deviceIndex);
  }

  @Override
  public int hashCode() {
    return Objects.hash(
        addresses, customProperties, securityGroupIds, name, description, networkId, deviceIndex);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NetworkInterfaceSpecification {\n");

    sb.append("    addresses: ").append(toIndentedString(addresses)).append("\n");
    sb.append("    customProperties: ").append(toIndentedString(customProperties)).append("\n");
    sb.append("    securityGroupIds: ").append(toIndentedString(securityGroupIds)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    networkId: ").append(toIndentedString(networkId)).append("\n");
    sb.append("    deviceIndex: ").append(toIndentedString(deviceIndex)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
