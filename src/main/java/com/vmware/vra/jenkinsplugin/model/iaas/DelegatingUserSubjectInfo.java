/*
 * VMware Cloud Assembly IaaS API
 * A multi-cloud IaaS API for Cloud Automation Services
 *
 * OpenAPI spec version: 2019-01-15
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.vra.jenkinsplugin.model.iaas;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.vmware.vra.jenkinsplugin.model.iaas.SubjectContext;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * DelegatingUserSubjectInfo
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-09-09T18:26:35.661905-04:00[America/New_York]")
public class DelegatingUserSubjectInfo {
  @SerializedName("bearerToken")
  private String bearerToken = null;

  @SerializedName("subjectContext")
  private SubjectContext subjectContext = null;

  public DelegatingUserSubjectInfo bearerToken(String bearerToken) {
    this.bearerToken = bearerToken;
    return this;
  }

   /**
   * Get bearerToken
   * @return bearerToken
  **/
  @Schema(description = "")
  public String getBearerToken() {
    return bearerToken;
  }

  public void setBearerToken(String bearerToken) {
    this.bearerToken = bearerToken;
  }

  public DelegatingUserSubjectInfo subjectContext(SubjectContext subjectContext) {
    this.subjectContext = subjectContext;
    return this;
  }

   /**
   * Get subjectContext
   * @return subjectContext
  **/
  @Schema(description = "")
  public SubjectContext getSubjectContext() {
    return subjectContext;
  }

  public void setSubjectContext(SubjectContext subjectContext) {
    this.subjectContext = subjectContext;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DelegatingUserSubjectInfo delegatingUserSubjectInfo = (DelegatingUserSubjectInfo) o;
    return Objects.equals(this.bearerToken, delegatingUserSubjectInfo.bearerToken) &&
        Objects.equals(this.subjectContext, delegatingUserSubjectInfo.subjectContext);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bearerToken, subjectContext);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DelegatingUserSubjectInfo {\n");
    
    sb.append("    bearerToken: ").append(toIndentedString(bearerToken)).append("\n");
    sb.append("    subjectContext: ").append(toIndentedString(subjectContext)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
