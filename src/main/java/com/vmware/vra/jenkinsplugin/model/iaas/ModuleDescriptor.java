/*
 * VMware Cloud Assembly IaaS API
 * A multi-cloud IaaS API for Cloud Automation Services
 *
 * OpenAPI spec version: 2019-01-15
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.vra.jenkinsplugin.model.iaas;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Objects;

/** ModuleDescriptor */
@javax.annotation.Generated(
    value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen",
    date = "2020-09-09T18:26:35.661905-04:00[America/New_York]")
public class ModuleDescriptor {
  @SerializedName("automatic")
  private Boolean automatic = null;

  @SerializedName("open")
  private Boolean open = null;

  public ModuleDescriptor automatic(Boolean automatic) {
    this.automatic = automatic;
    return this;
  }

  /**
   * Get automatic
   *
   * @return automatic
   */
  @Schema(description = "")
  public Boolean isAutomatic() {
    return automatic;
  }

  public void setAutomatic(Boolean automatic) {
    this.automatic = automatic;
  }

  public ModuleDescriptor open(Boolean open) {
    this.open = open;
    return this;
  }

  /**
   * Get open
   *
   * @return open
   */
  @Schema(description = "")
  public Boolean isOpen() {
    return open;
  }

  public void setOpen(Boolean open) {
    this.open = open;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModuleDescriptor moduleDescriptor = (ModuleDescriptor) o;
    return Objects.equals(this.automatic, moduleDescriptor.automatic)
        && Objects.equals(this.open, moduleDescriptor.open);
  }

  @Override
  public int hashCode() {
    return Objects.hash(automatic, open);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModuleDescriptor {\n");

    sb.append("    automatic: ").append(toIndentedString(automatic)).append("\n");
    sb.append("    open: ").append(toIndentedString(open)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
