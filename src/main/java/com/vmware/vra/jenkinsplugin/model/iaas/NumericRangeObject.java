/*
 * VMware Cloud Assembly IaaS API
 * A multi-cloud IaaS API for Cloud Automation Services
 *
 * OpenAPI spec version: 2019-01-15
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.vra.jenkinsplugin.model.iaas;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.Objects;

/** NumericRangeObject */
@javax.annotation.Generated(
    value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen",
    date = "2020-09-09T18:26:35.661905-04:00[America/New_York]")
public class NumericRangeObject {
  @SerializedName("min")
  private Object min = null;

  @SerializedName("isMaxInclusive")
  private Boolean isMaxInclusive = null;

  @SerializedName("max")
  private Object max = null;

  @SerializedName("isMinInclusive")
  private Boolean isMinInclusive = null;

  /** Gets or Sets type */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    LONG("LONG"),
    STRING("STRING"),
    BYTES("BYTES"),
    PODO("PODO"),
    COLLECTION("COLLECTION"),
    MAP("MAP"),
    BOOLEAN("BOOLEAN"),
    DOUBLE("DOUBLE"),
    INTERNETADDRESSV4("InternetAddressV4"),
    INTERNETADDRESSV6("InternetAddressV6"),
    DATE("DATE"),
    URI("URI"),
    ENUM("ENUM");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration)
          throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("precisionStep")
  private Integer precisionStep = null;

  public NumericRangeObject min(Object min) {
    this.min = min;
    return this;
  }

  /**
   * Get min
   *
   * @return min
   */
  @Schema(description = "")
  public Object getMin() {
    return min;
  }

  public void setMin(Object min) {
    this.min = min;
  }

  public NumericRangeObject isMaxInclusive(Boolean isMaxInclusive) {
    this.isMaxInclusive = isMaxInclusive;
    return this;
  }

  /**
   * Get isMaxInclusive
   *
   * @return isMaxInclusive
   */
  @Schema(description = "")
  public Boolean isIsMaxInclusive() {
    return isMaxInclusive;
  }

  public void setIsMaxInclusive(Boolean isMaxInclusive) {
    this.isMaxInclusive = isMaxInclusive;
  }

  public NumericRangeObject max(Object max) {
    this.max = max;
    return this;
  }

  /**
   * Get max
   *
   * @return max
   */
  @Schema(description = "")
  public Object getMax() {
    return max;
  }

  public void setMax(Object max) {
    this.max = max;
  }

  public NumericRangeObject isMinInclusive(Boolean isMinInclusive) {
    this.isMinInclusive = isMinInclusive;
    return this;
  }

  /**
   * Get isMinInclusive
   *
   * @return isMinInclusive
   */
  @Schema(description = "")
  public Boolean isIsMinInclusive() {
    return isMinInclusive;
  }

  public void setIsMinInclusive(Boolean isMinInclusive) {
    this.isMinInclusive = isMinInclusive;
  }

  public NumericRangeObject type(TypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   *
   * @return type
   */
  @Schema(description = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public NumericRangeObject precisionStep(Integer precisionStep) {
    this.precisionStep = precisionStep;
    return this;
  }

  /**
   * Get precisionStep
   *
   * @return precisionStep
   */
  @Schema(description = "")
  public Integer getPrecisionStep() {
    return precisionStep;
  }

  public void setPrecisionStep(Integer precisionStep) {
    this.precisionStep = precisionStep;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NumericRangeObject numericRangeObject = (NumericRangeObject) o;
    return Objects.equals(this.min, numericRangeObject.min)
        && Objects.equals(this.isMaxInclusive, numericRangeObject.isMaxInclusive)
        && Objects.equals(this.max, numericRangeObject.max)
        && Objects.equals(this.isMinInclusive, numericRangeObject.isMinInclusive)
        && Objects.equals(this.type, numericRangeObject.type)
        && Objects.equals(this.precisionStep, numericRangeObject.precisionStep);
  }

  @Override
  public int hashCode() {
    return Objects.hash(min, isMaxInclusive, max, isMinInclusive, type, precisionStep);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NumericRangeObject {\n");

    sb.append("    min: ").append(toIndentedString(min)).append("\n");
    sb.append("    isMaxInclusive: ").append(toIndentedString(isMaxInclusive)).append("\n");
    sb.append("    max: ").append(toIndentedString(max)).append("\n");
    sb.append("    isMinInclusive: ").append(toIndentedString(isMinInclusive)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    precisionStep: ").append(toIndentedString(precisionStep)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
