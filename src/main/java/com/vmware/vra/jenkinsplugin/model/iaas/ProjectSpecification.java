/*
 * VMware Cloud Assembly IaaS API
 * A multi-cloud IaaS API for Cloud Automation Services
 *
 * OpenAPI spec version: 2019-01-15
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.vra.jenkinsplugin.model.iaas;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;

/** Represents a specification for a project. */
@Schema(description = "Represents a specification for a project.")
@javax.annotation.Generated(
    value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen",
    date = "2020-09-09T18:26:35.661905-04:00[America/New_York]")
public class ProjectSpecification {
  @SerializedName("viewers")
  private List<User> viewers = null;

  @SerializedName("machineNamingTemplate")
  private String machineNamingTemplate = null;

  @SerializedName("sharedResources")
  private Boolean sharedResources = null;

  @SerializedName("operationTimeout")
  private Long operationTimeout = null;

  @SerializedName("members")
  private List<User> members = null;

  @SerializedName("zoneAssignmentConfigurations")
  private List<ZoneAssignmentConfig> zoneAssignmentConfigurations = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("constraints")
  private Map<String, List<Constraint>> constraints = null;

  @SerializedName("administrators")
  private List<User> administrators = null;

  public ProjectSpecification viewers(List<User> viewers) {
    this.viewers = viewers;
    return this;
  }

  public ProjectSpecification addViewersItem(User viewersItem) {
    if (this.viewers == null) {
      this.viewers = new ArrayList<User>();
    }
    this.viewers.add(viewersItem);
    return this;
  }

  /**
   * List of viewer users associated with the project.
   *
   * @return viewers
   */
  @Schema(
      example = "[{ \"email\":\"viewer@vmware.com\" }]",
      description = "List of viewer users associated with the project. ")
  public List<User> getViewers() {
    return viewers;
  }

  public void setViewers(List<User> viewers) {
    this.viewers = viewers;
  }

  public ProjectSpecification machineNamingTemplate(String machineNamingTemplate) {
    this.machineNamingTemplate = machineNamingTemplate;
    return this;
  }

  /**
   * The naming template to be used for machines provisioned in this project
   *
   * @return machineNamingTemplate
   */
  @Schema(
      example = "${project.name}-test-${####}",
      description = "The naming template to be used for machines provisioned in this project")
  public String getMachineNamingTemplate() {
    return machineNamingTemplate;
  }

  public void setMachineNamingTemplate(String machineNamingTemplate) {
    this.machineNamingTemplate = machineNamingTemplate;
  }

  public ProjectSpecification sharedResources(Boolean sharedResources) {
    this.sharedResources = sharedResources;
    return this;
  }

  /**
   * Specifies whether the resources in this projects are shared or not. If not set default will be
   * used.
   *
   * @return sharedResources
   */
  @Schema(
      example = "true",
      description =
          "Specifies whether the resources in this projects are shared or not. If not set default will be used.")
  public Boolean isSharedResources() {
    return sharedResources;
  }

  public void setSharedResources(Boolean sharedResources) {
    this.sharedResources = sharedResources;
  }

  public ProjectSpecification operationTimeout(Long operationTimeout) {
    this.operationTimeout = operationTimeout;
    return this;
  }

  /**
   * The timeout that should be used for Blueprint operations and Provisioning tasks. The timeout is
   * in seconds
   *
   * @return operationTimeout
   */
  @Schema(
      example = "30",
      description =
          "The timeout that should be used for Blueprint operations and Provisioning tasks. The timeout is in seconds")
  public Long getOperationTimeout() {
    return operationTimeout;
  }

  public void setOperationTimeout(Long operationTimeout) {
    this.operationTimeout = operationTimeout;
  }

  public ProjectSpecification members(List<User> members) {
    this.members = members;
    return this;
  }

  public ProjectSpecification addMembersItem(User membersItem) {
    if (this.members == null) {
      this.members = new ArrayList<User>();
    }
    this.members.add(membersItem);
    return this;
  }

  /**
   * List of member users associated with the project.
   *
   * @return members
   */
  @Schema(
      example = "[{ \"email\":\"member@vmware.com\" }]",
      description = "List of member users associated with the project. ")
  public List<User> getMembers() {
    return members;
  }

  public void setMembers(List<User> members) {
    this.members = members;
  }

  public ProjectSpecification zoneAssignmentConfigurations(
      List<ZoneAssignmentConfig> zoneAssignmentConfigurations) {
    this.zoneAssignmentConfigurations = zoneAssignmentConfigurations;
    return this;
  }

  public ProjectSpecification addZoneAssignmentConfigurationsItem(
      ZoneAssignmentConfig zoneAssignmentConfigurationsItem) {
    if (this.zoneAssignmentConfigurations == null) {
      this.zoneAssignmentConfigurations = new ArrayList<ZoneAssignmentConfig>();
    }
    this.zoneAssignmentConfigurations.add(zoneAssignmentConfigurationsItem);
    return this;
  }

  /**
   * List of configurations for zone assignment to a project.
   *
   * @return zoneAssignmentConfigurations
   */
  @Schema(description = "List of configurations for zone assignment to a project.")
  public List<ZoneAssignmentConfig> getZoneAssignmentConfigurations() {
    return zoneAssignmentConfigurations;
  }

  public void setZoneAssignmentConfigurations(
      List<ZoneAssignmentConfig> zoneAssignmentConfigurations) {
    this.zoneAssignmentConfigurations = zoneAssignmentConfigurations;
  }

  public ProjectSpecification name(String name) {
    this.name = name;
    return this;
  }

  /**
   * A human-friendly name used as an identifier in APIs that support this option.
   *
   * @return name
   */
  @Schema(
      required = true,
      description = "A human-friendly name used as an identifier in APIs that support this option.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ProjectSpecification description(String description) {
    this.description = description;
    return this;
  }

  /**
   * A human-friendly description.
   *
   * @return description
   */
  @Schema(description = "A human-friendly description.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ProjectSpecification constraints(Map<String, List<Constraint>> constraints) {
    this.constraints = constraints;
    return this;
  }

  public ProjectSpecification putConstraintsItem(String key, List<Constraint> constraintsItem) {
    if (this.constraints == null) {
      this.constraints = new HashMap<String, List<Constraint>>();
    }
    this.constraints.put(key, constraintsItem);
    return this;
  }

  /**
   * List of storage, network and extensibility constraints to be applied when provisioning through
   * this project.
   *
   * @return constraints
   */
  @Schema(
      example =
          "{\"network\":[{\"mandatory\": \"true\", \"expression\": \"env:dev\"}],\"storage\":[{\"mandatory\": \"false\", \"expression\": \"gold\"}],\"extensibility\":[{\"mandatory\": \"false\", \"expression\": \"key:value\"}]}",
      description =
          "List of storage, network and extensibility constraints to be applied when provisioning through this project.")
  public Map<String, List<Constraint>> getConstraints() {
    return constraints;
  }

  public void setConstraints(Map<String, List<Constraint>> constraints) {
    this.constraints = constraints;
  }

  public ProjectSpecification administrators(List<User> administrators) {
    this.administrators = administrators;
    return this;
  }

  public ProjectSpecification addAdministratorsItem(User administratorsItem) {
    if (this.administrators == null) {
      this.administrators = new ArrayList<User>();
    }
    this.administrators.add(administratorsItem);
    return this;
  }

  /**
   * List of administrator users associated with the project. Only administrators can manage
   * project&#x27;s configuration.
   *
   * @return administrators
   */
  @Schema(
      example = "[{ \"email\":\"administrator@vmware.com\" }]",
      description =
          "List of administrator users associated with the project. Only administrators can manage project's configuration.")
  public List<User> getAdministrators() {
    return administrators;
  }

  public void setAdministrators(List<User> administrators) {
    this.administrators = administrators;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProjectSpecification projectSpecification = (ProjectSpecification) o;
    return Objects.equals(this.viewers, projectSpecification.viewers)
        && Objects.equals(this.machineNamingTemplate, projectSpecification.machineNamingTemplate)
        && Objects.equals(this.sharedResources, projectSpecification.sharedResources)
        && Objects.equals(this.operationTimeout, projectSpecification.operationTimeout)
        && Objects.equals(this.members, projectSpecification.members)
        && Objects.equals(
            this.zoneAssignmentConfigurations, projectSpecification.zoneAssignmentConfigurations)
        && Objects.equals(this.name, projectSpecification.name)
        && Objects.equals(this.description, projectSpecification.description)
        && Objects.equals(this.constraints, projectSpecification.constraints)
        && Objects.equals(this.administrators, projectSpecification.administrators);
  }

  @Override
  public int hashCode() {
    return Objects.hash(
        viewers,
        machineNamingTemplate,
        sharedResources,
        operationTimeout,
        members,
        zoneAssignmentConfigurations,
        name,
        description,
        constraints,
        administrators);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProjectSpecification {\n");

    sb.append("    viewers: ").append(toIndentedString(viewers)).append("\n");
    sb.append("    machineNamingTemplate: ")
        .append(toIndentedString(machineNamingTemplate))
        .append("\n");
    sb.append("    sharedResources: ").append(toIndentedString(sharedResources)).append("\n");
    sb.append("    operationTimeout: ").append(toIndentedString(operationTimeout)).append("\n");
    sb.append("    members: ").append(toIndentedString(members)).append("\n");
    sb.append("    zoneAssignmentConfigurations: ")
        .append(toIndentedString(zoneAssignmentConfigurations))
        .append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    constraints: ").append(toIndentedString(constraints)).append("\n");
    sb.append("    administrators: ").append(toIndentedString(administrators)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
