/*
 * Copyright (c) 2020 VMware, Inc
 *
 *  SPDX-License-Identifier: MIT
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/*
 * VMware Cloud Assembly IaaS API
 * A multi-cloud IaaS API for Cloud Automation Services
 *
 * OpenAPI spec version: 2019-01-15
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.vra.jenkinsplugin.model.iaas;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;

/**
 * Specification for a generic cloud account.&lt;br&gt;&lt;br&gt;A cloud account identifies a cloud
 * account type and an account-specific deployment region or data center where the associated cloud
 * account resources are hosted.
 */
@Schema(
    description =
        "Specification for a generic cloud account.<br><br>A cloud account identifies a cloud account type and an account-specific deployment region or data center where the associated cloud account resources are hosted.")
@javax.annotation.Generated(
    value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen",
    date = "2020-09-09T18:26:35.661905-04:00[America/New_York]")
public class CloudAccountSpecification {
  @SerializedName("cloudAccountProperties")
  private Map<String, String> cloudAccountProperties = new HashMap<String, String>();

  @SerializedName("privateKey")
  private String privateKey = null;

  @SerializedName("associatedCloudAccountIds")
  private List<String> associatedCloudAccountIds = null;

  @SerializedName("createDefaultZones")
  private Boolean createDefaultZones = null;

  @SerializedName("customProperties")
  private Map<String, String> customProperties = null;

  @SerializedName("cloudAccountType")
  private String cloudAccountType = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("regionIds")
  private List<String> regionIds = new ArrayList<String>();

  @SerializedName("privateKeyId")
  private String privateKeyId = null;

  @SerializedName("tags")
  private List<Tag> tags = null;

  public CloudAccountSpecification cloudAccountProperties(
      Map<String, String> cloudAccountProperties) {
    this.cloudAccountProperties = cloudAccountProperties;
    return this;
  }

  public CloudAccountSpecification putCloudAccountPropertiesItem(
      String key, String cloudAccountPropertiesItem) {
    this.cloudAccountProperties.put(key, cloudAccountPropertiesItem);
    return this;
  }

  /**
   * Cloud Account specific properties supplied in as name value pairs
   *
   * @return cloudAccountProperties
   */
  @Schema(
      example = "{\"supportPublicImages\": \"true\", \"acceptSelfSignedCertificate\": \"true\" }",
      required = true,
      description = "Cloud Account specific properties supplied in as name value pairs")
  public Map<String, String> getCloudAccountProperties() {
    return cloudAccountProperties;
  }

  public void setCloudAccountProperties(Map<String, String> cloudAccountProperties) {
    this.cloudAccountProperties = cloudAccountProperties;
  }

  public CloudAccountSpecification privateKey(String privateKey) {
    this.privateKey = privateKey;
    return this;
  }

  /**
   * Secret access key or password to be used to authenticate with the cloud account
   *
   * @return privateKey
   */
  @Schema(
      example = "gfsScK345sGGaVdds222dasdfDDSSasdfdsa34fS",
      required = true,
      description =
          "Secret access key or password to be used to authenticate with the cloud account")
  public String getPrivateKey() {
    return privateKey;
  }

  public void setPrivateKey(String privateKey) {
    this.privateKey = privateKey;
  }

  public CloudAccountSpecification associatedCloudAccountIds(
      List<String> associatedCloudAccountIds) {
    this.associatedCloudAccountIds = associatedCloudAccountIds;
    return this;
  }

  public CloudAccountSpecification addAssociatedCloudAccountIdsItem(
      String associatedCloudAccountIdsItem) {
    if (this.associatedCloudAccountIds == null) {
      this.associatedCloudAccountIds = new ArrayList<String>();
    }
    this.associatedCloudAccountIds.add(associatedCloudAccountIdsItem);
    return this;
  }

  /**
   * Cloud accounts to associate with this cloud account
   *
   * @return associatedCloudAccountIds
   */
  @Schema(
      example = "[ \"42f3e0d199d134755684cd935435a\" ]",
      description = "Cloud accounts to associate with this cloud account")
  public List<String> getAssociatedCloudAccountIds() {
    return associatedCloudAccountIds;
  }

  public void setAssociatedCloudAccountIds(List<String> associatedCloudAccountIds) {
    this.associatedCloudAccountIds = associatedCloudAccountIds;
  }

  public CloudAccountSpecification createDefaultZones(Boolean createDefaultZones) {
    this.createDefaultZones = createDefaultZones;
    return this;
  }

  /**
   * Create default cloud zones for the enabled regions.
   *
   * @return createDefaultZones
   */
  @Schema(example = "true", description = "Create default cloud zones for the enabled regions.")
  public Boolean isCreateDefaultZones() {
    return createDefaultZones;
  }

  public void setCreateDefaultZones(Boolean createDefaultZones) {
    this.createDefaultZones = createDefaultZones;
  }

  public CloudAccountSpecification customProperties(Map<String, String> customProperties) {
    this.customProperties = customProperties;
    return this;
  }

  public CloudAccountSpecification putCustomPropertiesItem(
      String key, String customPropertiesItem) {
    if (this.customProperties == null) {
      this.customProperties = new HashMap<String, String>();
    }
    this.customProperties.put(key, customPropertiesItem);
    return this;
  }

  /**
   * Additional custom properties that may be used to extend the Cloud Account.
   *
   * @return customProperties
   */
  @Schema(
      example = "{ \"sampleadapterProjectId\" : \"projectId\" }",
      description = "Additional custom properties that may be used to extend the Cloud Account.")
  public Map<String, String> getCustomProperties() {
    return customProperties;
  }

  public void setCustomProperties(Map<String, String> customProperties) {
    this.customProperties = customProperties;
  }

  public CloudAccountSpecification cloudAccountType(String cloudAccountType) {
    this.cloudAccountType = cloudAccountType;
    return this;
  }

  /**
   * Cloud account type
   *
   * @return cloudAccountType
   */
  @Schema(
      example = "vsphere, aws, azure, nsxv, nsxt",
      required = true,
      description = "Cloud account type")
  public String getCloudAccountType() {
    return cloudAccountType;
  }

  public void setCloudAccountType(String cloudAccountType) {
    this.cloudAccountType = cloudAccountType;
  }

  public CloudAccountSpecification name(String name) {
    this.name = name;
    return this;
  }

  /**
   * A human-friendly name used as an identifier in APIs that support this option.
   *
   * @return name
   */
  @Schema(
      required = true,
      description = "A human-friendly name used as an identifier in APIs that support this option.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CloudAccountSpecification description(String description) {
    this.description = description;
    return this;
  }

  /**
   * A human-friendly description.
   *
   * @return description
   */
  @Schema(description = "A human-friendly description.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CloudAccountSpecification regionIds(List<String> regionIds) {
    this.regionIds = regionIds;
    return this;
  }

  public CloudAccountSpecification addRegionIdsItem(String regionIdsItem) {
    this.regionIds.add(regionIdsItem);
    return this;
  }

  /**
   * A set of Region names to enable provisioning on.Refer to
   * /iaas/cloud-accounts/region-enumeration. &#x27;regionIds&#x27; is not required parameter for
   * NSX-T and NSX-V cloud account types.
   *
   * @return regionIds
   */
  @Schema(
      example = "[ \"us-east-1\", \"ap-northeast-1\" ]",
      required = true,
      description =
          "A set of Region names to enable provisioning on.Refer to /iaas/cloud-accounts/region-enumeration.  'regionIds' is not required parameter for NSX-T and NSX-V cloud account types.")
  public List<String> getRegionIds() {
    return regionIds;
  }

  public void setRegionIds(List<String> regionIds) {
    this.regionIds = regionIds;
  }

  public CloudAccountSpecification privateKeyId(String privateKeyId) {
    this.privateKeyId = privateKeyId;
    return this;
  }

  /**
   * Access key id or username to be used to authenticate with the cloud account
   *
   * @return privateKeyId
   */
  @Schema(
      example = "ACDC55DB4MFH6ADG75KK",
      required = true,
      description = "Access key id or username to be used to authenticate with the cloud account")
  public String getPrivateKeyId() {
    return privateKeyId;
  }

  public void setPrivateKeyId(String privateKeyId) {
    this.privateKeyId = privateKeyId;
  }

  public CloudAccountSpecification tags(List<Tag> tags) {
    this.tags = tags;
    return this;
  }

  public CloudAccountSpecification addTagsItem(Tag tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<Tag>();
    }
    this.tags.add(tagsItem);
    return this;
  }

  /**
   * A set of tag keys and optional values to set on the Cloud Account
   *
   * @return tags
   */
  @Schema(
      example = "[ { \"key\" : \"env\", \"value\": \"dev\" } ]",
      description = "A set of tag keys and optional values to set on the Cloud Account")
  public List<Tag> getTags() {
    return tags;
  }

  public void setTags(List<Tag> tags) {
    this.tags = tags;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CloudAccountSpecification cloudAccountSpecification = (CloudAccountSpecification) o;
    return Objects.equals(
            this.cloudAccountProperties, cloudAccountSpecification.cloudAccountProperties)
        && Objects.equals(this.privateKey, cloudAccountSpecification.privateKey)
        && Objects.equals(
            this.associatedCloudAccountIds, cloudAccountSpecification.associatedCloudAccountIds)
        && Objects.equals(this.createDefaultZones, cloudAccountSpecification.createDefaultZones)
        && Objects.equals(this.customProperties, cloudAccountSpecification.customProperties)
        && Objects.equals(this.cloudAccountType, cloudAccountSpecification.cloudAccountType)
        && Objects.equals(this.name, cloudAccountSpecification.name)
        && Objects.equals(this.description, cloudAccountSpecification.description)
        && Objects.equals(this.regionIds, cloudAccountSpecification.regionIds)
        && Objects.equals(this.privateKeyId, cloudAccountSpecification.privateKeyId)
        && Objects.equals(this.tags, cloudAccountSpecification.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(
        cloudAccountProperties,
        privateKey,
        associatedCloudAccountIds,
        createDefaultZones,
        customProperties,
        cloudAccountType,
        name,
        description,
        regionIds,
        privateKeyId,
        tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CloudAccountSpecification {\n");

    sb.append("    cloudAccountProperties: ")
        .append(toIndentedString(cloudAccountProperties))
        .append("\n");
    sb.append("    privateKey: ").append(toIndentedString(privateKey)).append("\n");
    sb.append("    associatedCloudAccountIds: ")
        .append(toIndentedString(associatedCloudAccountIds))
        .append("\n");
    sb.append("    createDefaultZones: ").append(toIndentedString(createDefaultZones)).append("\n");
    sb.append("    customProperties: ").append(toIndentedString(customProperties)).append("\n");
    sb.append("    cloudAccountType: ").append(toIndentedString(cloudAccountType)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    regionIds: ").append(toIndentedString(regionIds)).append("\n");
    sb.append("    privateKeyId: ").append(toIndentedString(privateKeyId)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
