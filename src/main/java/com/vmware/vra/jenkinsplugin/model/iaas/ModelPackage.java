/*
 * VMware Cloud Assembly IaaS API
 * A multi-cloud IaaS API for Cloud Automation Services
 *
 * OpenAPI spec version: 2019-01-15
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.vra.jenkinsplugin.model.iaas;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/** ModelPackage */
@javax.annotation.Generated(
    value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen",
    date = "2020-09-09T18:26:35.661905-04:00[America/New_York]")
public class ModelPackage {
  @SerializedName("specificationVendor")
  private String specificationVendor = null;

  @SerializedName("declaredAnnotations")
  private List<Annotation> declaredAnnotations = null;

  @SerializedName("specificationTitle")
  private String specificationTitle = null;

  @SerializedName("implementationVersion")
  private String implementationVersion = null;

  @SerializedName("sealed")
  private Boolean sealed = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("implementationVendor")
  private String implementationVendor = null;

  @SerializedName("annotations")
  private List<Annotation> annotations = null;

  @SerializedName("implementationTitle")
  private String implementationTitle = null;

  @SerializedName("specificationVersion")
  private String specificationVersion = null;

  public ModelPackage specificationVendor(String specificationVendor) {
    this.specificationVendor = specificationVendor;
    return this;
  }

  /**
   * Get specificationVendor
   *
   * @return specificationVendor
   */
  @Schema(description = "")
  public String getSpecificationVendor() {
    return specificationVendor;
  }

  public void setSpecificationVendor(String specificationVendor) {
    this.specificationVendor = specificationVendor;
  }

  public ModelPackage declaredAnnotations(List<Annotation> declaredAnnotations) {
    this.declaredAnnotations = declaredAnnotations;
    return this;
  }

  public ModelPackage addDeclaredAnnotationsItem(Annotation declaredAnnotationsItem) {
    if (this.declaredAnnotations == null) {
      this.declaredAnnotations = new ArrayList<Annotation>();
    }
    this.declaredAnnotations.add(declaredAnnotationsItem);
    return this;
  }

  /**
   * Get declaredAnnotations
   *
   * @return declaredAnnotations
   */
  @Schema(description = "")
  public List<Annotation> getDeclaredAnnotations() {
    return declaredAnnotations;
  }

  public void setDeclaredAnnotations(List<Annotation> declaredAnnotations) {
    this.declaredAnnotations = declaredAnnotations;
  }

  public ModelPackage specificationTitle(String specificationTitle) {
    this.specificationTitle = specificationTitle;
    return this;
  }

  /**
   * Get specificationTitle
   *
   * @return specificationTitle
   */
  @Schema(description = "")
  public String getSpecificationTitle() {
    return specificationTitle;
  }

  public void setSpecificationTitle(String specificationTitle) {
    this.specificationTitle = specificationTitle;
  }

  public ModelPackage implementationVersion(String implementationVersion) {
    this.implementationVersion = implementationVersion;
    return this;
  }

  /**
   * Get implementationVersion
   *
   * @return implementationVersion
   */
  @Schema(description = "")
  public String getImplementationVersion() {
    return implementationVersion;
  }

  public void setImplementationVersion(String implementationVersion) {
    this.implementationVersion = implementationVersion;
  }

  public ModelPackage sealed(Boolean sealed) {
    this.sealed = sealed;
    return this;
  }

  /**
   * Get sealed
   *
   * @return sealed
   */
  @Schema(description = "")
  public Boolean isSealed() {
    return sealed;
  }

  public void setSealed(Boolean sealed) {
    this.sealed = sealed;
  }

  public ModelPackage name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   *
   * @return name
   */
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ModelPackage implementationVendor(String implementationVendor) {
    this.implementationVendor = implementationVendor;
    return this;
  }

  /**
   * Get implementationVendor
   *
   * @return implementationVendor
   */
  @Schema(description = "")
  public String getImplementationVendor() {
    return implementationVendor;
  }

  public void setImplementationVendor(String implementationVendor) {
    this.implementationVendor = implementationVendor;
  }

  public ModelPackage annotations(List<Annotation> annotations) {
    this.annotations = annotations;
    return this;
  }

  public ModelPackage addAnnotationsItem(Annotation annotationsItem) {
    if (this.annotations == null) {
      this.annotations = new ArrayList<Annotation>();
    }
    this.annotations.add(annotationsItem);
    return this;
  }

  /**
   * Get annotations
   *
   * @return annotations
   */
  @Schema(description = "")
  public List<Annotation> getAnnotations() {
    return annotations;
  }

  public void setAnnotations(List<Annotation> annotations) {
    this.annotations = annotations;
  }

  public ModelPackage implementationTitle(String implementationTitle) {
    this.implementationTitle = implementationTitle;
    return this;
  }

  /**
   * Get implementationTitle
   *
   * @return implementationTitle
   */
  @Schema(description = "")
  public String getImplementationTitle() {
    return implementationTitle;
  }

  public void setImplementationTitle(String implementationTitle) {
    this.implementationTitle = implementationTitle;
  }

  public ModelPackage specificationVersion(String specificationVersion) {
    this.specificationVersion = specificationVersion;
    return this;
  }

  /**
   * Get specificationVersion
   *
   * @return specificationVersion
   */
  @Schema(description = "")
  public String getSpecificationVersion() {
    return specificationVersion;
  }

  public void setSpecificationVersion(String specificationVersion) {
    this.specificationVersion = specificationVersion;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelPackage _package = (ModelPackage) o;
    return Objects.equals(this.specificationVendor, _package.specificationVendor)
        && Objects.equals(this.declaredAnnotations, _package.declaredAnnotations)
        && Objects.equals(this.specificationTitle, _package.specificationTitle)
        && Objects.equals(this.implementationVersion, _package.implementationVersion)
        && Objects.equals(this.sealed, _package.sealed)
        && Objects.equals(this.name, _package.name)
        && Objects.equals(this.implementationVendor, _package.implementationVendor)
        && Objects.equals(this.annotations, _package.annotations)
        && Objects.equals(this.implementationTitle, _package.implementationTitle)
        && Objects.equals(this.specificationVersion, _package.specificationVersion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(
        specificationVendor,
        declaredAnnotations,
        specificationTitle,
        implementationVersion,
        sealed,
        name,
        implementationVendor,
        annotations,
        implementationTitle,
        specificationVersion);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelPackage {\n");

    sb.append("    specificationVendor: ")
        .append(toIndentedString(specificationVendor))
        .append("\n");
    sb.append("    declaredAnnotations: ")
        .append(toIndentedString(declaredAnnotations))
        .append("\n");
    sb.append("    specificationTitle: ").append(toIndentedString(specificationTitle)).append("\n");
    sb.append("    implementationVersion: ")
        .append(toIndentedString(implementationVersion))
        .append("\n");
    sb.append("    sealed: ").append(toIndentedString(sealed)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    implementationVendor: ")
        .append(toIndentedString(implementationVendor))
        .append("\n");
    sb.append("    annotations: ").append(toIndentedString(annotations)).append("\n");
    sb.append("    implementationTitle: ")
        .append(toIndentedString(implementationTitle))
        .append("\n");
    sb.append("    specificationVersion: ")
        .append(toIndentedString(specificationVersion))
        .append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
