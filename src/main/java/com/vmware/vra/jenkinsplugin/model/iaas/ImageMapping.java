/*
 * VMware Cloud Assembly IaaS API
 * A multi-cloud IaaS API for Cloud Automation Services
 *
 * OpenAPI spec version: 2019-01-15
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.vra.jenkinsplugin.model.iaas;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

/**
 * Describes an image mapping between image key and fabric image.&lt;br&gt;**HATEOAS**
 * links:&lt;br&gt;**region** - Region - Region for the mapping.
 */
@Schema(
    description =
        "Describes an image mapping between image key and fabric image.<br>**HATEOAS** links:<br>**region** - Region - Region for the mapping.")
@javax.annotation.Generated(
    value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen",
    date = "2020-09-09T18:26:35.661905-04:00[America/New_York]")
public class ImageMapping {
  @SerializedName("mapping")
  private Map<String, ImageMappingDescription> mapping =
      new HashMap<String, ImageMappingDescription>();

  @SerializedName("externalRegionId")
  private String externalRegionId = null;

  @SerializedName("_links")
  private Map<String, Href> _links = new HashMap<String, Href>();

  public ImageMapping mapping(Map<String, ImageMappingDescription> mapping) {
    this.mapping = mapping;
    return this;
  }

  public ImageMapping putMappingItem(String key, ImageMappingDescription mappingItem) {
    this.mapping.put(key, mappingItem);
    return this;
  }

  /**
   * Image mapping defined for the particular region.
   *
   * @return mapping
   */
  @Schema(
      example =
          "{ \"ubuntu\" : {\"externalRegionId\": \"us-east-1\", \"externalId\": \"ami-2c7b5656\", \"name\": \"ami-ubuntu-16.04\", \"description\": \"instance-store - HVM - supports - UTF-8 - tools\"} }",
      required = true,
      description = "Image mapping defined for the particular region.")
  public Map<String, ImageMappingDescription> getMapping() {
    return mapping;
  }

  public void setMapping(Map<String, ImageMappingDescription> mapping) {
    this.mapping = mapping;
  }

  public ImageMapping externalRegionId(String externalRegionId) {
    this.externalRegionId = externalRegionId;
    return this;
  }

  /**
   * The id of the region for which this mapping is defined.
   *
   * @return externalRegionId
   */
  @Schema(
      example = "us-east-1",
      description = "The id of the region for which this mapping is defined.")
  public String getExternalRegionId() {
    return externalRegionId;
  }

  public void setExternalRegionId(String externalRegionId) {
    this.externalRegionId = externalRegionId;
  }

  public ImageMapping _links(Map<String, Href> _links) {
    this._links = _links;
    return this;
  }

  public ImageMapping putLinksItem(String key, Href _linksItem) {
    this._links.put(key, _linksItem);
    return this;
  }

  /**
   * HATEOAS of the entity
   *
   * @return _links
   */
  @Schema(required = true, description = "HATEOAS of the entity")
  public Map<String, Href> getLinks() {
    return _links;
  }

  public void setLinks(Map<String, Href> _links) {
    this._links = _links;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ImageMapping imageMapping = (ImageMapping) o;
    return Objects.equals(this.mapping, imageMapping.mapping)
        && Objects.equals(this.externalRegionId, imageMapping.externalRegionId)
        && Objects.equals(this._links, imageMapping._links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mapping, externalRegionId, _links);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ImageMapping {\n");

    sb.append("    mapping: ").append(toIndentedString(mapping)).append("\n");
    sb.append("    externalRegionId: ").append(toIndentedString(externalRegionId)).append("\n");
    sb.append("    _links: ").append(toIndentedString(_links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
