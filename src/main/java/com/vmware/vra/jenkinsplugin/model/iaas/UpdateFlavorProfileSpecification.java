/*
 * VMware Cloud Assembly IaaS API
 * A multi-cloud IaaS API for Cloud Automation Services
 *
 * OpenAPI spec version: 2019-01-15
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.vra.jenkinsplugin.model.iaas;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.vmware.vra.jenkinsplugin.model.iaas.FabricFlavorDescription;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
/**
 * UpdateFlavorProfileSpecification
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-09-09T18:26:35.661905-04:00[America/New_York]")
public class UpdateFlavorProfileSpecification {
  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("flavorMapping")
  private Map<String, FabricFlavorDescription> flavorMapping = new HashMap<String, FabricFlavorDescription>();

  public UpdateFlavorProfileSpecification name(String name) {
    this.name = name;
    return this;
  }

   /**
   * A human-friendly name used as an identifier in APIs that support this option.
   * @return name
  **/
  @Schema(required = true, description = "A human-friendly name used as an identifier in APIs that support this option.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public UpdateFlavorProfileSpecification description(String description) {
    this.description = description;
    return this;
  }

   /**
   * A human-friendly description.
   * @return description
  **/
  @Schema(description = "A human-friendly description.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public UpdateFlavorProfileSpecification flavorMapping(Map<String, FabricFlavorDescription> flavorMapping) {
    this.flavorMapping = flavorMapping;
    return this;
  }

  public UpdateFlavorProfileSpecification putFlavorMappingItem(String key, FabricFlavorDescription flavorMappingItem) {
    this.flavorMapping.put(key, flavorMappingItem);
    return this;
  }

   /**
   * Map between global fabric flavor keys &lt;String&gt; and fabric flavor descriptions &lt;FabricFlavorDescription&gt; 
   * @return flavorMapping
  **/
  @Schema(example = "{ \"small\": { \"name\": \"t2.small\" }, \"medium\": { \"name\": \"t2.medium\"}}, \"vSphere_small\": { \"cpuCount\": \"2\", \"memoryInMB\": \"2048\"}, \"vSphere_medium\": { \"cpuCount\": \"4\", \"memoryInMB\": \"4096\"}}", required = true, description = "Map between global fabric flavor keys <String> and fabric flavor descriptions <FabricFlavorDescription> ")
  public Map<String, FabricFlavorDescription> getFlavorMapping() {
    return flavorMapping;
  }

  public void setFlavorMapping(Map<String, FabricFlavorDescription> flavorMapping) {
    this.flavorMapping = flavorMapping;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateFlavorProfileSpecification updateFlavorProfileSpecification = (UpdateFlavorProfileSpecification) o;
    return Objects.equals(this.name, updateFlavorProfileSpecification.name) &&
        Objects.equals(this.description, updateFlavorProfileSpecification.description) &&
        Objects.equals(this.flavorMapping, updateFlavorProfileSpecification.flavorMapping);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, flavorMapping);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateFlavorProfileSpecification {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    flavorMapping: ").append(toIndentedString(flavorMapping)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
