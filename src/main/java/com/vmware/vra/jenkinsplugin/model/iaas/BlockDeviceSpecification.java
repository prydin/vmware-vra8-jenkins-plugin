/*
 * VMware Cloud Assembly IaaS API
 * A multi-cloud IaaS API for Cloud Automation Services
 *
 * OpenAPI spec version: 2019-01-15
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.vra.jenkinsplugin.model.iaas;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.vmware.vra.jenkinsplugin.model.iaas.Constraint;
import com.vmware.vra.jenkinsplugin.model.iaas.Tag;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
/**
 * BlockDeviceSpecification
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-09-09T18:26:35.661905-04:00[America/New_York]")
public class BlockDeviceSpecification {
  @SerializedName("capacityInGB")
  private Integer capacityInGB = null;

  @SerializedName("sourceReference")
  private String sourceReference = null;

  @SerializedName("customProperties")
  private Map<String, String> customProperties = null;

  @SerializedName("encrypted")
  private Boolean encrypted = null;

  @SerializedName("deploymentId")
  private String deploymentId = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("diskContentBase64")
  private String diskContentBase64 = null;

  @SerializedName("persistent")
  private Boolean persistent = null;

  @SerializedName("projectId")
  private String projectId = null;

  @SerializedName("constraints")
  private List<Constraint> constraints = null;

  @SerializedName("tags")
  private List<Tag> tags = null;

  public BlockDeviceSpecification capacityInGB(Integer capacityInGB) {
    this.capacityInGB = capacityInGB;
    return this;
  }

   /**
   * Capacity of the block device in GB.
   * @return capacityInGB
  **/
  @Schema(example = "78", required = true, description = "Capacity of the block device in GB.")
  public Integer getCapacityInGB() {
    return capacityInGB;
  }

  public void setCapacityInGB(Integer capacityInGB) {
    this.capacityInGB = capacityInGB;
  }

  public BlockDeviceSpecification sourceReference(String sourceReference) {
    this.sourceReference = sourceReference;
    return this;
  }

   /**
   * Reference to URI using which the block device has to be created.
   * @return sourceReference
  **/
  @Schema(example = "ami-0d4cfd66", description = "Reference to URI using which the block device has to be created.")
  public String getSourceReference() {
    return sourceReference;
  }

  public void setSourceReference(String sourceReference) {
    this.sourceReference = sourceReference;
  }

  public BlockDeviceSpecification customProperties(Map<String, String> customProperties) {
    this.customProperties = customProperties;
    return this;
  }

  public BlockDeviceSpecification putCustomPropertiesItem(String key, String customPropertiesItem) {
    if (this.customProperties == null) {
      this.customProperties = new HashMap<String, String>();
    }
    this.customProperties.put(key, customPropertiesItem);
    return this;
  }

   /**
   * Additional custom properties that may be used to extend the block device.
   * @return customProperties
  **/
  @Schema(example = "{ \"key\" : \"type\", \"value\": \"HDD\" }", description = "Additional custom properties that may be used to extend the block device.")
  public Map<String, String> getCustomProperties() {
    return customProperties;
  }

  public void setCustomProperties(Map<String, String> customProperties) {
    this.customProperties = customProperties;
  }

  public BlockDeviceSpecification encrypted(Boolean encrypted) {
    this.encrypted = encrypted;
    return this;
  }

   /**
   * Indicates whether the block device should be encrypted or not.
   * @return encrypted
  **/
  @Schema(example = "true", description = "Indicates whether the block device should be encrypted or not.")
  public Boolean isEncrypted() {
    return encrypted;
  }

  public void setEncrypted(Boolean encrypted) {
    this.encrypted = encrypted;
  }

  public BlockDeviceSpecification deploymentId(String deploymentId) {
    this.deploymentId = deploymentId;
    return this;
  }

   /**
   * The id of the deployment that is associated with this resource
   * @return deploymentId
  **/
  @Schema(example = "123e4567-e89b-12d3-a456-426655440000", description = "The id of the deployment that is associated with this resource")
  public String getDeploymentId() {
    return deploymentId;
  }

  public void setDeploymentId(String deploymentId) {
    this.deploymentId = deploymentId;
  }

  public BlockDeviceSpecification name(String name) {
    this.name = name;
    return this;
  }

   /**
   * A human-friendly name used as an identifier in APIs that support this option.
   * @return name
  **/
  @Schema(required = true, description = "A human-friendly name used as an identifier in APIs that support this option.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public BlockDeviceSpecification description(String description) {
    this.description = description;
    return this;
  }

   /**
   * A human-friendly description.
   * @return description
  **/
  @Schema(description = "A human-friendly description.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public BlockDeviceSpecification diskContentBase64(String diskContentBase64) {
    this.diskContentBase64 = diskContentBase64;
    return this;
  }

   /**
   * Content of a disk, base64 encoded.
   * @return diskContentBase64
  **/
  @Schema(example = "dGVzdA", description = "Content of a disk, base64 encoded.")
  public String getDiskContentBase64() {
    return diskContentBase64;
  }

  public void setDiskContentBase64(String diskContentBase64) {
    this.diskContentBase64 = diskContentBase64;
  }

  public BlockDeviceSpecification persistent(Boolean persistent) {
    this.persistent = persistent;
    return this;
  }

   /**
   * Indicates whether the block device survives a delete action.
   * @return persistent
  **/
  @Schema(example = "true", description = "Indicates whether the block device survives a delete action.")
  public Boolean isPersistent() {
    return persistent;
  }

  public void setPersistent(Boolean persistent) {
    this.persistent = persistent;
  }

  public BlockDeviceSpecification projectId(String projectId) {
    this.projectId = projectId;
    return this;
  }

   /**
   * The id of the project the current user belongs to.
   * @return projectId
  **/
  @Schema(example = "e058", required = true, description = "The id of the project the current user belongs to.")
  public String getProjectId() {
    return projectId;
  }

  public void setProjectId(String projectId) {
    this.projectId = projectId;
  }

  public BlockDeviceSpecification constraints(List<Constraint> constraints) {
    this.constraints = constraints;
    return this;
  }

  public BlockDeviceSpecification addConstraintsItem(Constraint constraintsItem) {
    if (this.constraints == null) {
      this.constraints = new ArrayList<Constraint>();
    }
    this.constraints.add(constraintsItem);
    return this;
  }

   /**
   * Constraints that are used to drive placement policies for the block device that is produced from this specification. Constraint expressions are matched against tags on existing placement targets.
   * @return constraints
  **/
  @Schema(example = "[ { \"mandatory\" : \"true\", \"expression\": \"environment\":\"prod\"}, {\"mandatory\" : \"false\", \"floor\": \"3rd\"} ]", description = "Constraints that are used to drive placement policies for the block device that is produced from this specification. Constraint expressions are matched against tags on existing placement targets.")
  public List<Constraint> getConstraints() {
    return constraints;
  }

  public void setConstraints(List<Constraint> constraints) {
    this.constraints = constraints;
  }

  public BlockDeviceSpecification tags(List<Tag> tags) {
    this.tags = tags;
    return this;
  }

  public BlockDeviceSpecification addTagsItem(Tag tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<Tag>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * A set of tag keys and optional values that should be set on any resource that is produced from this specification.
   * @return tags
  **/
  @Schema(example = "[ { \"key\" : \"location\", \"value\": \"SOF\" } ]", description = "A set of tag keys and optional values that should be set on any resource that is produced from this specification.")
  public List<Tag> getTags() {
    return tags;
  }

  public void setTags(List<Tag> tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BlockDeviceSpecification blockDeviceSpecification = (BlockDeviceSpecification) o;
    return Objects.equals(this.capacityInGB, blockDeviceSpecification.capacityInGB) &&
        Objects.equals(this.sourceReference, blockDeviceSpecification.sourceReference) &&
        Objects.equals(this.customProperties, blockDeviceSpecification.customProperties) &&
        Objects.equals(this.encrypted, blockDeviceSpecification.encrypted) &&
        Objects.equals(this.deploymentId, blockDeviceSpecification.deploymentId) &&
        Objects.equals(this.name, blockDeviceSpecification.name) &&
        Objects.equals(this.description, blockDeviceSpecification.description) &&
        Objects.equals(this.diskContentBase64, blockDeviceSpecification.diskContentBase64) &&
        Objects.equals(this.persistent, blockDeviceSpecification.persistent) &&
        Objects.equals(this.projectId, blockDeviceSpecification.projectId) &&
        Objects.equals(this.constraints, blockDeviceSpecification.constraints) &&
        Objects.equals(this.tags, blockDeviceSpecification.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(capacityInGB, sourceReference, customProperties, encrypted, deploymentId, name, description, diskContentBase64, persistent, projectId, constraints, tags);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BlockDeviceSpecification {\n");
    
    sb.append("    capacityInGB: ").append(toIndentedString(capacityInGB)).append("\n");
    sb.append("    sourceReference: ").append(toIndentedString(sourceReference)).append("\n");
    sb.append("    customProperties: ").append(toIndentedString(customProperties)).append("\n");
    sb.append("    encrypted: ").append(toIndentedString(encrypted)).append("\n");
    sb.append("    deploymentId: ").append(toIndentedString(deploymentId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    diskContentBase64: ").append(toIndentedString(diskContentBase64)).append("\n");
    sb.append("    persistent: ").append(toIndentedString(persistent)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    constraints: ").append(toIndentedString(constraints)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
