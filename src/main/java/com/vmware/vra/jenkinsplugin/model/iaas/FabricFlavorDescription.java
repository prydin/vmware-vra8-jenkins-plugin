/*
 * VMware Cloud Assembly IaaS API
 * A multi-cloud IaaS API for Cloud Automation Services
 *
 * OpenAPI spec version: 2019-01-15
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.vra.jenkinsplugin.model.iaas;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Represents fabric flavor instance type description. Used when creating flavor profiles.
 */
@Schema(description = "Represents fabric flavor instance type description. Used when creating flavor profiles.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-09-09T18:26:35.661905-04:00[America/New_York]")
public class FabricFlavorDescription {
  @SerializedName("memoryInMB")
  private Long memoryInMB = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("cpuCount")
  private Integer cpuCount = null;

  public FabricFlavorDescription memoryInMB(Long memoryInMB) {
    this.memoryInMB = memoryInMB;
    return this;
  }

   /**
   * Total amount of memory (in megabytes). Mandatory for private clouds such as vSphere. Not populated when inapplicable.
   * @return memoryInMB
  **/
  @Schema(example = "4096", description = "Total amount of memory (in megabytes). Mandatory for private clouds such as vSphere. Not populated when inapplicable.")
  public Long getMemoryInMB() {
    return memoryInMB;
  }

  public void setMemoryInMB(Long memoryInMB) {
    this.memoryInMB = memoryInMB;
  }

  public FabricFlavorDescription name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The value of the instance type in the corresponding cloud. Valid and mandatory for public clouds
   * @return name
  **/
  @Schema(example = "t2.small, t2.medium", description = "The value of the instance type in the corresponding cloud. Valid and mandatory for public clouds")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public FabricFlavorDescription cpuCount(Integer cpuCount) {
    this.cpuCount = cpuCount;
    return this;
  }

   /**
   * Number of CPU cores. Mandatory for private clouds such as vSphere. Not populated when inapplicable.
   * @return cpuCount
  **/
  @Schema(example = "4", description = "Number of CPU cores. Mandatory for private clouds such as vSphere. Not populated when inapplicable.")
  public Integer getCpuCount() {
    return cpuCount;
  }

  public void setCpuCount(Integer cpuCount) {
    this.cpuCount = cpuCount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FabricFlavorDescription fabricFlavorDescription = (FabricFlavorDescription) o;
    return Objects.equals(this.memoryInMB, fabricFlavorDescription.memoryInMB) &&
        Objects.equals(this.name, fabricFlavorDescription.name) &&
        Objects.equals(this.cpuCount, fabricFlavorDescription.cpuCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(memoryInMB, name, cpuCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FabricFlavorDescription {\n");
    
    sb.append("    memoryInMB: ").append(toIndentedString(memoryInMB)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    cpuCount: ").append(toIndentedString(cpuCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
