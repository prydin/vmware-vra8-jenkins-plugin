/*
 * Copyright (c) 2020 VMware, Inc
 *
 *  SPDX-License-Identifier: MIT
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/*
 * VMware Service Broker API
 * A multi-cloud API for Cloud Automation Services
 *
 * OpenAPI spec version: 2020-08-25
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.vra.jenkinsplugin.model.catalog;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Objects;

/**
 * A type of policy that includes the schema of the policy itself and the schema of the objects
 * affected by the policy
 */
@Schema(
    description =
        "A type of policy that includes the schema of the policy itself and the schema of the objects affected by the policy")
@javax.annotation.Generated(
    value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen",
    date = "2020-09-09T18:27:41.063635-04:00[America/New_York]")
public class PolicyType {
  @SerializedName("config")
  private PolicyFeatureConfig config = null;

  @SerializedName("definitionSchema")
  private Object definitionSchema = null;

  @SerializedName("displayName")
  private String displayName = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("targetSchema")
  private Object targetSchema = null;

  public PolicyType config(PolicyFeatureConfig config) {
    this.config = config;
    return this;
  }

  /**
   * Get config
   *
   * @return config
   */
  @Schema(description = "")
  public PolicyFeatureConfig getConfig() {
    return config;
  }

  public void setConfig(PolicyFeatureConfig config) {
    this.config = config;
  }

  public PolicyType definitionSchema(Object definitionSchema) {
    this.definitionSchema = definitionSchema;
    return this;
  }

  /**
   * Schema describing a policy object of this type
   *
   * @return definitionSchema
   */
  @Schema(required = true, description = "Schema describing a policy object of this type")
  public Object getDefinitionSchema() {
    return definitionSchema;
  }

  public void setDefinitionSchema(Object definitionSchema) {
    this.definitionSchema = definitionSchema;
  }

  public PolicyType displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Policy type display-name/label
   *
   * @return displayName
   */
  @Schema(required = true, description = "Policy type display-name/label")
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  public PolicyType id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Policy type ID
   *
   * @return id
   */
  @Schema(required = true, description = "Policy type ID")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public PolicyType name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Policy type name
   *
   * @return name
   */
  @Schema(required = true, description = "Policy type name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public PolicyType targetSchema(Object targetSchema) {
    this.targetSchema = targetSchema;
    return this;
  }

  /**
   * Schema describing objects that can be affected by this policy
   *
   * @return targetSchema
   */
  @Schema(
      required = true,
      description = "Schema describing objects that can be affected by this policy")
  public Object getTargetSchema() {
    return targetSchema;
  }

  public void setTargetSchema(Object targetSchema) {
    this.targetSchema = targetSchema;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PolicyType policyType = (PolicyType) o;
    return Objects.equals(this.config, policyType.config)
        && Objects.equals(this.definitionSchema, policyType.definitionSchema)
        && Objects.equals(this.displayName, policyType.displayName)
        && Objects.equals(this.id, policyType.id)
        && Objects.equals(this.name, policyType.name)
        && Objects.equals(this.targetSchema, policyType.targetSchema);
  }

  @Override
  public int hashCode() {
    return Objects.hash(config, definitionSchema, displayName, id, name, targetSchema);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PolicyType {\n");

    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("    definitionSchema: ").append(toIndentedString(definitionSchema)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    targetSchema: ").append(toIndentedString(targetSchema)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
