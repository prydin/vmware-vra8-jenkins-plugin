/*
 * VMware Cloud Assembly IaaS API
 * A multi-cloud IaaS API for Cloud Automation Services
 *
 * OpenAPI spec version: 2019-01-15
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.vra.jenkinsplugin.model.iaas;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * DeprecationPolicy
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-09-09T18:26:35.661905-04:00[America/New_York]")
public class DeprecationPolicy {
  @SerializedName("deprecatedAt")
  private String deprecatedAt = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("expiresAt")
  private String expiresAt = null;

  public DeprecationPolicy deprecatedAt(String deprecatedAt) {
    this.deprecatedAt = deprecatedAt;
    return this;
  }

   /**
   * The date the api was deprecated in yyyy-MM-dd format (UTC). Could be empty if the api is not deprecated.
   * @return deprecatedAt
  **/
  @Schema(description = "The date the api was deprecated in yyyy-MM-dd format (UTC). Could be empty if the api is not deprecated.")
  public String getDeprecatedAt() {
    return deprecatedAt;
  }

  public void setDeprecatedAt(String deprecatedAt) {
    this.deprecatedAt = deprecatedAt;
  }

  public DeprecationPolicy description(String description) {
    this.description = description;
    return this;
  }

   /**
   * A free text description that contains information about why this api is deprecated and how to migrate to a newer version.
   * @return description
  **/
  @Schema(description = "A free text description that contains information about why this api is deprecated and how to migrate to a newer version.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public DeprecationPolicy expiresAt(String expiresAt) {
    this.expiresAt = expiresAt;
    return this;
  }

   /**
   * The date the api support will be dropped in yyyy-MM-dd format (UTC). The api may still be available for use after that date but this is not guaranteed.
   * @return expiresAt
  **/
  @Schema(description = "The date the api support will be dropped in yyyy-MM-dd format (UTC). The api may still be available for use after that date but this is not guaranteed.")
  public String getExpiresAt() {
    return expiresAt;
  }

  public void setExpiresAt(String expiresAt) {
    this.expiresAt = expiresAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeprecationPolicy deprecationPolicy = (DeprecationPolicy) o;
    return Objects.equals(this.deprecatedAt, deprecationPolicy.deprecatedAt) &&
        Objects.equals(this.description, deprecationPolicy.description) &&
        Objects.equals(this.expiresAt, deprecationPolicy.expiresAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deprecatedAt, description, expiresAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeprecationPolicy {\n");
    
    sb.append("    deprecatedAt: ").append(toIndentedString(deprecatedAt)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    expiresAt: ").append(toIndentedString(expiresAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
