/*
 * VMware Service Broker API
 * A multi-cloud API for Cloud Automation Services
 *
 * OpenAPI spec version: 2020-08-25
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.vra.jenkinsplugin.model.catalog;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.UUID;
/**
 * Represents a catalog item or content source that is linked to a project via an entitlement.
 */
@Schema(description = "Represents a catalog item or content source that is linked to a project via an entitlement.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-09-09T18:27:41.063635-04:00[America/New_York]")
public class ContentDefinition {
  @SerializedName("description")
  private String description = null;

  @SerializedName("iconId")
  private UUID iconId = null;

  @SerializedName("id")
  private UUID id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("numItems")
  private Integer numItems = null;

  @SerializedName("sourceName")
  private String sourceName = null;

  @SerializedName("sourceType")
  private String sourceType = null;

  @SerializedName("type")
  private String type = null;

  public ContentDefinition description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description of either the catalog item or the catalog source
   * @return description
  **/
  @Schema(description = "Description of either the catalog item or the catalog source")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ContentDefinition iconId(UUID iconId) {
    this.iconId = iconId;
    return this;
  }

   /**
   * Icon id of associated catalog item (if association is with catalog item)
   * @return iconId
  **/
  @Schema(description = "Icon id of associated catalog item (if association is with catalog item)")
  public UUID getIconId() {
    return iconId;
  }

  public void setIconId(UUID iconId) {
    this.iconId = iconId;
  }

  public ContentDefinition id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Id of either the catalog source or catalog item.
   * @return id
  **/
  @Schema(required = true, description = "Id of either the catalog source or catalog item.")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public ContentDefinition name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of either the catalog item or the catalog source
   * @return name
  **/
  @Schema(description = "Name of either the catalog item or the catalog source")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ContentDefinition numItems(Integer numItems) {
    this.numItems = numItems;
    return this;
  }

   /**
   * Number of items in the associated catalog source
   * @return numItems
  **/
  @Schema(description = "Number of items in the associated catalog source")
  public Integer getNumItems() {
    return numItems;
  }

  public void setNumItems(Integer numItems) {
    this.numItems = numItems;
  }

  public ContentDefinition sourceName(String sourceName) {
    this.sourceName = sourceName;
    return this;
  }

   /**
   * Catalog source name
   * @return sourceName
  **/
  @Schema(description = "Catalog source name")
  public String getSourceName() {
    return sourceName;
  }

  public void setSourceName(String sourceName) {
    this.sourceName = sourceName;
  }

  public ContentDefinition sourceType(String sourceType) {
    this.sourceType = sourceType;
    return this;
  }

   /**
   * Catalog source type
   * @return sourceType
  **/
  @Schema(description = "Catalog source type")
  public String getSourceType() {
    return sourceType;
  }

  public void setSourceType(String sourceType) {
    this.sourceType = sourceType;
  }

  public ContentDefinition type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Content definition type
   * @return type
  **/
  @Schema(required = true, description = "Content definition type")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContentDefinition contentDefinition = (ContentDefinition) o;
    return Objects.equals(this.description, contentDefinition.description) &&
        Objects.equals(this.iconId, contentDefinition.iconId) &&
        Objects.equals(this.id, contentDefinition.id) &&
        Objects.equals(this.name, contentDefinition.name) &&
        Objects.equals(this.numItems, contentDefinition.numItems) &&
        Objects.equals(this.sourceName, contentDefinition.sourceName) &&
        Objects.equals(this.sourceType, contentDefinition.sourceType) &&
        Objects.equals(this.type, contentDefinition.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, iconId, id, name, numItems, sourceName, sourceType, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContentDefinition {\n");
    
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    iconId: ").append(toIndentedString(iconId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    numItems: ").append(toIndentedString(numItems)).append("\n");
    sb.append("    sourceName: ").append(toIndentedString(sourceName)).append("\n");
    sb.append("    sourceType: ").append(toIndentedString(sourceType)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
