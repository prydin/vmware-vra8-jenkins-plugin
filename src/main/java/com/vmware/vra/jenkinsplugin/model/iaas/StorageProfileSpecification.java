/*
 * VMware Cloud Assembly IaaS API
 * A multi-cloud IaaS API for Cloud Automation Services
 *
 * OpenAPI spec version: 2019-01-15
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.vra.jenkinsplugin.model.iaas;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.vmware.vra.jenkinsplugin.model.iaas.Tag;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
/**
 * Represents a specification of generic storage profile.
 */
@Schema(description = "Represents a specification of generic storage profile.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-09-09T18:26:35.661905-04:00[America/New_York]")
public class StorageProfileSpecification {
  @SerializedName("diskProperties")
  private Map<String, String> diskProperties = null;

  @SerializedName("supportsEncryption")
  private Boolean supportsEncryption = null;

  @SerializedName("diskTargetProperties")
  private Map<String, String> diskTargetProperties = null;

  @SerializedName("regionId")
  private String regionId = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("defaultItem")
  private Boolean defaultItem = null;

  @SerializedName("tags")
  private List<Tag> tags = null;

  public StorageProfileSpecification diskProperties(Map<String, String> diskProperties) {
    this.diskProperties = diskProperties;
    return this;
  }

  public StorageProfileSpecification putDiskPropertiesItem(String key, String diskPropertiesItem) {
    if (this.diskProperties == null) {
      this.diskProperties = new HashMap<String, String>();
    }
    this.diskProperties.put(key, diskPropertiesItem);
    return this;
  }

   /**
   * Map of storage properties that are to be applied on disk while provisioning.
   * @return diskProperties
  **/
  @Schema(example = "{ \"diskProperties\": {                     \"provisioningType\": \"thin\",                     \"sharesLevel\": \"low\",                     \"shares\": \"500\",                     \"limitIops\": \"500\"                     \"diskType\": \"firstClass\"                     \"deviceType\": \"ebs\"                     \"volumeType\": \"gp2\"                     \"azureDataDiskCaching\": \"ReadWrite\"                     \"azureOsDiskCaching\": \"ReadWrite\"                     \"azureManagedDiskType\": \"Standard_LRS\"                 } }", description = "Map of storage properties that are to be applied on disk while provisioning.")
  public Map<String, String> getDiskProperties() {
    return diskProperties;
  }

  public void setDiskProperties(Map<String, String> diskProperties) {
    this.diskProperties = diskProperties;
  }

  public StorageProfileSpecification supportsEncryption(Boolean supportsEncryption) {
    this.supportsEncryption = supportsEncryption;
    return this;
  }

   /**
   * Indicates whether this storage profile supports encryption or not.
   * @return supportsEncryption
  **/
  @Schema(description = "Indicates whether this storage profile supports encryption or not.")
  public Boolean isSupportsEncryption() {
    return supportsEncryption;
  }

  public void setSupportsEncryption(Boolean supportsEncryption) {
    this.supportsEncryption = supportsEncryption;
  }

  public StorageProfileSpecification diskTargetProperties(Map<String, String> diskTargetProperties) {
    this.diskTargetProperties = diskTargetProperties;
    return this;
  }

  public StorageProfileSpecification putDiskTargetPropertiesItem(String key, String diskTargetPropertiesItem) {
    if (this.diskTargetProperties == null) {
      this.diskTargetProperties = new HashMap<String, String>();
    }
    this.diskTargetProperties.put(key, diskTargetPropertiesItem);
    return this;
  }

   /**
   * Map of storage placements to know where the disk is provisioned.
   * @return diskTargetProperties
  **/
  @Schema(example = "{ \"diskTargetProperties\": {                     \"storageAccountId\": \"27dhbf7\",                     \"storagePolicyId\": \"7fhfj9f\",                     \"datastoreId\": \"638nfjd8\",                 } }", description = "Map of storage placements to know where the disk is provisioned.")
  public Map<String, String> getDiskTargetProperties() {
    return diskTargetProperties;
  }

  public void setDiskTargetProperties(Map<String, String> diskTargetProperties) {
    this.diskTargetProperties = diskTargetProperties;
  }

  public StorageProfileSpecification regionId(String regionId) {
    this.regionId = regionId;
    return this;
  }

   /**
   * The Id of the region that is associated with the storage profile.
   * @return regionId
  **/
  @Schema(example = "31186", required = true, description = "The Id of the region that is associated with the storage profile.")
  public String getRegionId() {
    return regionId;
  }

  public void setRegionId(String regionId) {
    this.regionId = regionId;
  }

  public StorageProfileSpecification name(String name) {
    this.name = name;
    return this;
  }

   /**
   * A human-friendly name used as an identifier in APIs that support this option.
   * @return name
  **/
  @Schema(required = true, description = "A human-friendly name used as an identifier in APIs that support this option.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public StorageProfileSpecification description(String description) {
    this.description = description;
    return this;
  }

   /**
   * A human-friendly description.
   * @return description
  **/
  @Schema(description = "A human-friendly description.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public StorageProfileSpecification defaultItem(Boolean defaultItem) {
    this.defaultItem = defaultItem;
    return this;
  }

   /**
   * Indicates if a storage profile is a default profile.
   * @return defaultItem
  **/
  @Schema(required = true, description = "Indicates if a storage profile is a default profile.")
  public Boolean isDefaultItem() {
    return defaultItem;
  }

  public void setDefaultItem(Boolean defaultItem) {
    this.defaultItem = defaultItem;
  }

  public StorageProfileSpecification tags(List<Tag> tags) {
    this.tags = tags;
    return this;
  }

  public StorageProfileSpecification addTagsItem(Tag tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<Tag>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * A list of tags that represent the capabilities of this storage profile
   * @return tags
  **/
  @Schema(example = "[ { \"key\" : \"tier\", \"value\": \"silver\" } ]", description = "A list of tags that represent the capabilities of this storage profile")
  public List<Tag> getTags() {
    return tags;
  }

  public void setTags(List<Tag> tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StorageProfileSpecification storageProfileSpecification = (StorageProfileSpecification) o;
    return Objects.equals(this.diskProperties, storageProfileSpecification.diskProperties) &&
        Objects.equals(this.supportsEncryption, storageProfileSpecification.supportsEncryption) &&
        Objects.equals(this.diskTargetProperties, storageProfileSpecification.diskTargetProperties) &&
        Objects.equals(this.regionId, storageProfileSpecification.regionId) &&
        Objects.equals(this.name, storageProfileSpecification.name) &&
        Objects.equals(this.description, storageProfileSpecification.description) &&
        Objects.equals(this.defaultItem, storageProfileSpecification.defaultItem) &&
        Objects.equals(this.tags, storageProfileSpecification.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(diskProperties, supportsEncryption, diskTargetProperties, regionId, name, description, defaultItem, tags);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StorageProfileSpecification {\n");
    
    sb.append("    diskProperties: ").append(toIndentedString(diskProperties)).append("\n");
    sb.append("    supportsEncryption: ").append(toIndentedString(supportsEncryption)).append("\n");
    sb.append("    diskTargetProperties: ").append(toIndentedString(diskTargetProperties)).append("\n");
    sb.append("    regionId: ").append(toIndentedString(regionId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    defaultItem: ").append(toIndentedString(defaultItem)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
