/*
 * VMware Service Broker API
 * A multi-cloud API for Cloud Automation Services
 *
 * OpenAPI spec version: 2020-08-25
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.vmware.vra.jenkinsplugin.model.catalog;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.Date;
import java.util.UUID;
/**
 * Represents request events.
 */
@Schema(description = "Represents request events.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-09-09T18:27:41.063635-04:00[America/New_York]")
public class Event {
  @SerializedName("details")
  private String details = null;

  @SerializedName("hasLogs")
  private Boolean hasLogs = null;

  @SerializedName("id")
  private UUID id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("resourceName")
  private String resourceName = null;

  @SerializedName("resourceType")
  private String resourceType = null;

  @SerializedName("timestamp")
  private Date timestamp = null;

  public Event details(String details) {
    this.details = details;
    return this;
  }

   /**
   * Longer user-friendly details of the event.
   * @return details
  **/
  @Schema(description = "Longer user-friendly details of the event.")
  public String getDetails() {
    return details;
  }

  public void setDetails(String details) {
    this.details = details;
  }

  public Event hasLogs(Boolean hasLogs) {
    this.hasLogs = hasLogs;
    return this;
  }

   /**
   * Indicates whether the event has logs or not.
   * @return hasLogs
  **/
  @Schema(description = "Indicates whether the event has logs or not.")
  public Boolean isHasLogs() {
    return hasLogs;
  }

  public void setHasLogs(Boolean hasLogs) {
    this.hasLogs = hasLogs;
  }

  public Event id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Event identifier
   * @return id
  **/
  @Schema(description = "Event identifier")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public Event name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Short user-friendly label of the event (e.g. &#x27;shutting down myVM&#x27;)
   * @return name
  **/
  @Schema(required = true, description = "Short user-friendly label of the event (e.g. 'shutting down myVM')")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Event resourceName(String resourceName) {
    this.resourceName = resourceName;
    return this;
  }

   /**
   * Optional resource name to which the event applies to
   * @return resourceName
  **/
  @Schema(description = "Optional resource name to which the event applies to")
  public String getResourceName() {
    return resourceName;
  }

  public void setResourceName(String resourceName) {
    this.resourceName = resourceName;
  }

  public Event resourceType(String resourceType) {
    this.resourceType = resourceType;
    return this;
  }

   /**
   * Optional resource type to which the event applies to
   * @return resourceType
  **/
  @Schema(description = "Optional resource type to which the event applies to")
  public String getResourceType() {
    return resourceType;
  }

  public void setResourceType(String resourceType) {
    this.resourceType = resourceType;
  }

  public Event timestamp(Date timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Timestamp of the Event (e.g. date format &#x27;2019-07-13T23:16:49.310Z&#x27;).
   * @return timestamp
  **/
  @Schema(required = true, description = "Timestamp of the Event (e.g. date format '2019-07-13T23:16:49.310Z').")
  public Date getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(Date timestamp) {
    this.timestamp = timestamp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Event event = (Event) o;
    return Objects.equals(this.details, event.details) &&
        Objects.equals(this.hasLogs, event.hasLogs) &&
        Objects.equals(this.id, event.id) &&
        Objects.equals(this.name, event.name) &&
        Objects.equals(this.resourceName, event.resourceName) &&
        Objects.equals(this.resourceType, event.resourceType) &&
        Objects.equals(this.timestamp, event.timestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(details, hasLogs, id, name, resourceName, resourceType, timestamp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Event {\n");
    
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("    hasLogs: ").append(toIndentedString(hasLogs)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    resourceName: ").append(toIndentedString(resourceName)).append("\n");
    sb.append("    resourceType: ").append(toIndentedString(resourceType)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
